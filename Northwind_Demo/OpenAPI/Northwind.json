{
  "openapi": "3.0.1",
  "info": {
    "title": "NorthWind",
    "version": "1.0.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:9351/api"
    }
  ],
  "paths": {
    "/odata/Category": {
      "get": {
        "summary": "Get entities from Category",
        "operationId": "Category.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CategoryName",
                  "Description",
                  "Picture"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CategoryName",
                  "CategoryName desc",
                  "Description",
                  "Description desc",
                  "Picture",
                  "Picture desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Category",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Category",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Category"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/CategoryApi": {
      "get": {
        "summary": "Get entity from Category by key",
        "operationId": "Category.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Category",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CategoryName",
                  "Description",
                  "Picture"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Category",
        "operationId": "Category.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Category",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Category"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Category",
        "operationId": "Category.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Category",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Category"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Category",
        "operationId": "Category.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Category",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Category",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Category"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Customer": {
      "get": {
        "summary": "Get entities from Customer",
        "operationId": "Customer.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CompanyName",
                  "CompanyName desc",
                  "ContactName",
                  "ContactName desc",
                  "ContactTitle",
                  "ContactTitle desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "Phone",
                  "Phone desc",
                  "Fax",
                  "Fax desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Customer",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Customer",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Customer"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/CustomerApi": {
      "get": {
        "summary": "Get entity from Customer by key",
        "operationId": "Customer.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Customer",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Customer",
        "operationId": "Customer.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Customer",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Customer"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Customer",
        "operationId": "Customer.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Customer",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Customer"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Customer",
        "operationId": "Customer.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Customer",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Customer",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Customer"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Employee": {
      "get": {
        "summary": "Get entities from Employee",
        "operationId": "Employee.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "LastName",
                  "FirstName",
                  "Title",
                  "TitleOfCourtesy",
                  "BirthDate",
                  "HireDate",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "HomePhone",
                  "Extension",
                  "Photo",
                  "Notes",
                  "ReportsTo",
                  "PhotoPath"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "LastName",
                  "LastName desc",
                  "FirstName",
                  "FirstName desc",
                  "Title",
                  "Title desc",
                  "TitleOfCourtesy",
                  "TitleOfCourtesy desc",
                  "BirthDate",
                  "BirthDate desc",
                  "HireDate",
                  "HireDate desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "HomePhone",
                  "HomePhone desc",
                  "Extension",
                  "Extension desc",
                  "Photo",
                  "Photo desc",
                  "Notes",
                  "Notes desc",
                  "ReportsTo",
                  "ReportsTo desc",
                  "PhotoPath",
                  "PhotoPath desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employee",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Employee",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Employee"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/EmployeeApi": {
      "get": {
        "summary": "Get entity from Employee by key",
        "operationId": "Employee.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Employee",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "LastName",
                  "FirstName",
                  "Title",
                  "TitleOfCourtesy",
                  "BirthDate",
                  "HireDate",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "HomePhone",
                  "Extension",
                  "Photo",
                  "Notes",
                  "ReportsTo",
                  "PhotoPath"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Employee",
        "operationId": "Employee.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Employee",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Employee"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Employee",
        "operationId": "Employee.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Employee",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Employee"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Employee",
        "operationId": "Employee.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Employee",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Employee",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Employee"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Order": {
      "get": {
        "summary": "Get entities from Order",
        "operationId": "Order.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CustomerID",
                  "EmployeeID",
                  "OrderDate",
                  "RequiredDate",
                  "ShippedDate",
                  "ShipVia",
                  "Freight",
                  "ShipName",
                  "ShipAddress",
                  "ShipCity",
                  "ShipRegion",
                  "ShipPostalCode",
                  "ShipCountry",
                  "StatusID"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CustomerID",
                  "CustomerID desc",
                  "EmployeeID",
                  "EmployeeID desc",
                  "OrderDate",
                  "OrderDate desc",
                  "RequiredDate",
                  "RequiredDate desc",
                  "ShippedDate",
                  "ShippedDate desc",
                  "ShipVia",
                  "ShipVia desc",
                  "Freight",
                  "Freight desc",
                  "ShipName",
                  "ShipName desc",
                  "ShipAddress",
                  "ShipAddress desc",
                  "ShipCity",
                  "ShipCity desc",
                  "ShipRegion",
                  "ShipRegion desc",
                  "ShipPostalCode",
                  "ShipPostalCode desc",
                  "ShipCountry",
                  "ShipCountry desc",
                  "StatusID",
                  "StatusID desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Order",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Order",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Order"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/OrderApi": {
      "get": {
        "summary": "Get entity from Order by key",
        "operationId": "Order.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Order",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CustomerID",
                  "EmployeeID",
                  "OrderDate",
                  "RequiredDate",
                  "ShippedDate",
                  "ShipVia",
                  "Freight",
                  "ShipName",
                  "ShipAddress",
                  "ShipCity",
                  "ShipRegion",
                  "ShipPostalCode",
                  "ShipCountry",
                  "StatusID"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Order",
        "operationId": "Order.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Order",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Order"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Order",
        "operationId": "Order.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Order",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Order"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Order",
        "operationId": "Order.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Order",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Order",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Order"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/OrderDetail": {
      "get": {
        "summary": "Get entities from OrderDetail",
        "operationId": "OrderDetail.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "OrderID",
                  "ProductID",
                  "UnitPrice",
                  "Quantity",
                  "Discount"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "OrderID",
                  "OrderID desc",
                  "ProductID",
                  "ProductID desc",
                  "UnitPrice",
                  "UnitPrice desc",
                  "Quantity",
                  "Quantity desc",
                  "Discount",
                  "Discount desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of OrderDetail",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "OrderDetail",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/OrderDetail"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/OrderDetailApi": {
      "get": {
        "summary": "Get entity from OrderDetail by key",
        "operationId": "OrderDetail.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "OrderDetail",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "OrderID",
                  "ProductID",
                  "UnitPrice",
                  "Quantity",
                  "Discount"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetail"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to OrderDetail",
        "operationId": "OrderDetail.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "OrderDetail",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/OrderDetail"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in OrderDetail",
        "operationId": "OrderDetail.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "OrderDetail",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/OrderDetail"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from OrderDetail",
        "operationId": "OrderDetail.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "OrderDetail",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "OrderDetail",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/OrderDetail"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/OrderStatus": {
      "get": {
        "summary": "Get entities from OrderStatus",
        "operationId": "OrderStatus.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "Name",
                  "Name desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of OrderStatus",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "OrderStatus",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/OrderStatus"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/OrderStatusApi": {
      "get": {
        "summary": "Get entity from OrderStatus by key",
        "operationId": "OrderStatus.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "OrderStatus",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderStatus"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to OrderStatus",
        "operationId": "OrderStatus.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "OrderStatus",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/OrderStatus"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in OrderStatus",
        "operationId": "OrderStatus.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "OrderStatus",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/OrderStatus"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from OrderStatus",
        "operationId": "OrderStatus.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "OrderStatus",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "OrderStatus",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/OrderStatus"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Product": {
      "get": {
        "summary": "Get entities from Product",
        "operationId": "Product.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "ProductName",
                  "SupplierID",
                  "CategoryID",
                  "QuantityPerUnit",
                  "UnitPrice",
                  "UnitsInStock",
                  "UnitsOnOrder",
                  "ReorderLevel",
                  "Discontinued"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "ProductName",
                  "ProductName desc",
                  "SupplierID",
                  "SupplierID desc",
                  "CategoryID",
                  "CategoryID desc",
                  "QuantityPerUnit",
                  "QuantityPerUnit desc",
                  "UnitPrice",
                  "UnitPrice desc",
                  "UnitsInStock",
                  "UnitsInStock desc",
                  "UnitsOnOrder",
                  "UnitsOnOrder desc",
                  "ReorderLevel",
                  "ReorderLevel desc",
                  "Discontinued",
                  "Discontinued desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Product",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Product",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Product"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/ProductApi": {
      "get": {
        "summary": "Get entity from Product by key",
        "operationId": "Product.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Product",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "ProductName",
                  "SupplierID",
                  "CategoryID",
                  "QuantityPerUnit",
                  "UnitPrice",
                  "UnitsInStock",
                  "UnitsOnOrder",
                  "ReorderLevel",
                  "Discontinued"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Product",
        "operationId": "Product.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Product",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Product"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Product",
        "operationId": "Product.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Product",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Product"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Product",
        "operationId": "Product.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Product",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Product",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Product"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Shipper": {
      "get": {
        "summary": "Get entities from Shipper",
        "operationId": "Shipper.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "Phone"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CompanyName",
                  "CompanyName desc",
                  "Phone",
                  "Phone desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Shipper",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Shipper",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Shipper"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/ShipperApi": {
      "get": {
        "summary": "Get entity from Shipper by key",
        "operationId": "Shipper.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Shipper",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "Phone"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipper"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Shipper",
        "operationId": "Shipper.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipper"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Shipper",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Shipper"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Shipper",
        "operationId": "Shipper.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipper"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Shipper",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Shipper"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Shipper",
        "operationId": "Shipper.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Shipper",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Shipper",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Shipper"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Supplier": {
      "get": {
        "summary": "Get entities from Supplier",
        "operationId": "Supplier.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax",
                  "HomePage"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CompanyName",
                  "CompanyName desc",
                  "ContactName",
                  "ContactName desc",
                  "ContactTitle",
                  "ContactTitle desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "Phone",
                  "Phone desc",
                  "Fax",
                  "Fax desc",
                  "HomePage",
                  "HomePage desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Supplier",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Supplier",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Supplier"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SupplierApi": {
      "get": {
        "summary": "Get entity from Supplier by key",
        "operationId": "Supplier.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Supplier",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax",
                  "HomePage"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Supplier",
        "operationId": "Supplier.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Supplier",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Supplier"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Supplier",
        "operationId": "Supplier.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Supplier",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Supplier"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Supplier",
        "operationId": "Supplier.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Supplier",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Supplier",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Supplier"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SysOperationLock": {
      "get": {
        "summary": "Get entities from SysOperationLock",
        "operationId": "SysOperationLock.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "OperationName",
                  "OperationContext",
                  "MachineName",
                  "ProcessId",
                  "AquiredTime",
                  "ExpirationTime"
                ],
                "type": "string",
                "default": "OperationName"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "OperationName",
                  "OperationName desc",
                  "OperationContext",
                  "OperationContext desc",
                  "MachineName",
                  "MachineName desc",
                  "ProcessId",
                  "ProcessId desc",
                  "AquiredTime",
                  "AquiredTime desc",
                  "ExpirationTime",
                  "ExpirationTime desc"
                ],
                "type": "string",
                "default": "OperationName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SysOperationLock",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SysOperationLock",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SysOperationLock"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysOperationLockApi": {
      "get": {
        "summary": "Get entity from SysOperationLock by key",
        "operationId": "SysOperationLock.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: OperationName, OperationContext",
            "required": true,
            "schema": {
              "title": "SysOperationLock",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "OperationName",
                  "OperationContext",
                  "MachineName",
                  "ProcessId",
                  "AquiredTime",
                  "ExpirationTime"
                ],
                "type": "string",
                "default": "OperationName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysOperationLock"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to SysOperationLock",
        "operationId": "SysOperationLock.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysOperationLock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysOperationLock",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysOperationLock"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in SysOperationLock",
        "operationId": "SysOperationLock.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysOperationLock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysOperationLock",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysOperationLock"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysOperationLock",
        "operationId": "SysOperationLock.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: OperationName, OperationContext",
            "required": true,
            "schema": {
              "title": "SysOperationLock",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysOperationLock",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysOperationLock"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysPermissionApi": {
      "put": {
        "summary": "Update entity in SysPermission",
        "operationId": "SysPermission.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysPermission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysPermission",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysPermission"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysPermission",
        "operationId": "SysPermission.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysPermission",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysPermission",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysPermission"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysPermissionTypeApi": {
      "put": {
        "summary": "Update entity in SysPermissionType",
        "operationId": "SysPermissionType.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysPermissionType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysPermissionType",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysPermissionType"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysPermissionType",
        "operationId": "SysPermissionType.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysPermissionType",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysPermissionType",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysPermissionType"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SysResetPasswordToken": {
      "get": {
        "summary": "Get entities from SysResetPasswordToken",
        "operationId": "SysResetPasswordToken.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "UserId",
                  "Token",
                  "ValidFrom",
                  "IsExecuted"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "UserId",
                  "UserId desc",
                  "Token",
                  "Token desc",
                  "ValidFrom",
                  "ValidFrom desc",
                  "IsExecuted",
                  "IsExecuted desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SysResetPasswordToken",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SysResetPasswordToken",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SysResetPasswordToken"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysResetPasswordTokenApi": {
      "get": {
        "summary": "Get entity from SysResetPasswordToken by key",
        "operationId": "SysResetPasswordToken.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysResetPasswordToken",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "UserId",
                  "Token",
                  "ValidFrom",
                  "IsExecuted"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysResetPasswordToken"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to SysResetPasswordToken",
        "operationId": "SysResetPasswordToken.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysResetPasswordToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysResetPasswordToken",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysResetPasswordToken"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in SysResetPasswordToken",
        "operationId": "SysResetPasswordToken.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysResetPasswordToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysResetPasswordToken",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysResetPasswordToken"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysResetPasswordToken",
        "operationId": "SysResetPasswordToken.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysResetPasswordToken",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysResetPasswordToken",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysResetPasswordToken"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SysRole": {
      "get": {
        "summary": "Get entities from SysRole",
        "operationId": "SysRole.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name",
                  "Description",
                  "OwnerUserID",
                  "IsOwnByUser",
                  "IsSystem"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "Name",
                  "Name desc",
                  "Description",
                  "Description desc",
                  "OwnerUserID",
                  "OwnerUserID desc",
                  "IsOwnByUser",
                  "IsOwnByUser desc",
                  "IsSystem",
                  "IsSystem desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SysRole",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SysRole",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SysRole"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysRoleApi": {
      "get": {
        "summary": "Get entity from SysRole by key",
        "operationId": "SysRole.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysRole",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name",
                  "Description",
                  "OwnerUserID",
                  "IsOwnByUser",
                  "IsSystem"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysRole"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to SysRole",
        "operationId": "SysRole.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysRole",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysRole"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in SysRole",
        "operationId": "SysRole.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysRole",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysRole"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysRole",
        "operationId": "SysRole.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysRole",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysRole",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysRole"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysRolePermissionApi": {
      "put": {
        "summary": "Update entity in SysRolePermission",
        "operationId": "SysRolePermission.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRolePermission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysRolePermission",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysRolePermission"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysRolePermission",
        "operationId": "SysRolePermission.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysRolePermission",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysRolePermission",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysRolePermission"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SysSetting": {
      "get": {
        "summary": "Get entities from SysSetting",
        "operationId": "SysSetting.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "SettingPropertyId",
                  "UserId",
                  "StringValue"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "SettingPropertyId",
                  "SettingPropertyId desc",
                  "UserId",
                  "UserId desc",
                  "StringValue",
                  "StringValue desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SysSetting",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SysSetting",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SysSetting"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysSettingApi": {
      "get": {
        "summary": "Get entity from SysSetting by key",
        "operationId": "SysSetting.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysSetting",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "SettingPropertyId",
                  "UserId",
                  "StringValue"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysSetting"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to SysSetting",
        "operationId": "SysSetting.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysSetting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSetting",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSetting"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in SysSetting",
        "operationId": "SysSetting.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysSetting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSetting",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSetting"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysSetting",
        "operationId": "SysSetting.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysSetting",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSetting",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSetting"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SysSettingProperty": {
      "get": {
        "summary": "Get entities from SysSettingProperty",
        "operationId": "SysSettingProperty.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name",
                  "IsManaged",
                  "Description",
                  "UIEditorType",
                  "GroupName",
                  "IsOverridable",
                  "DefaultType"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "Name",
                  "Name desc",
                  "IsManaged",
                  "IsManaged desc",
                  "Description",
                  "Description desc",
                  "UIEditorType",
                  "UIEditorType desc",
                  "GroupName",
                  "GroupName desc",
                  "IsOverridable",
                  "IsOverridable desc",
                  "DefaultType",
                  "DefaultType desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SysSettingProperty",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SysSettingProperty",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SysSettingProperty"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysSettingPropertyApi": {
      "get": {
        "summary": "Get entity from SysSettingProperty by key",
        "operationId": "SysSettingProperty.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysSettingProperty",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name",
                  "IsManaged",
                  "Description",
                  "UIEditorType",
                  "GroupName",
                  "IsOverridable",
                  "DefaultType"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysSettingProperty"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to SysSettingProperty",
        "operationId": "SysSettingProperty.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysSettingProperty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSettingProperty",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSettingProperty"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in SysSettingProperty",
        "operationId": "SysSettingProperty.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysSettingProperty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSettingProperty",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSettingProperty"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysSettingProperty",
        "operationId": "SysSettingProperty.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysSettingProperty",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSettingProperty",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSettingProperty"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysUserApi": {
      "put": {
        "summary": "Update entity in SysUser",
        "operationId": "SysUser.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUser",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUser"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysUser",
        "operationId": "SysUser.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysUser",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUser",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUser"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysUserPermissionsDisplayViewApi": {
      "put": {
        "summary": "Update entity in SysUserPermissionsDisplayView",
        "operationId": "SysUserPermissionsDisplayView.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUserPermissionsDisplayView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUserPermissionsDisplayView",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUserPermissionsDisplayView"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysUserPermissionsDisplayView",
        "operationId": "SysUserPermissionsDisplayView.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: UserId, PermissionId",
            "required": true,
            "schema": {
              "title": "SysUserPermissionsDisplayView",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUserPermissionsDisplayView",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUserPermissionsDisplayView"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysUserRoleApi": {
      "put": {
        "summary": "Update entity in SysUserRole",
        "operationId": "SysUserRole.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUserRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUserRole",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUserRole"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysUserRole",
        "operationId": "SysUserRole.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysUserRole",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUserRole",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUserRole"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysUsersDisplayViewApi": {
      "put": {
        "summary": "Update entity in SysUsersDisplayView",
        "operationId": "SysUsersDisplayView.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUsersDisplayView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUsersDisplayView",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUsersDisplayView"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysUsersDisplayView",
        "operationId": "SysUsersDisplayView.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysUsersDisplayView",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUsersDisplayView",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUsersDisplayView"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/VSalesByCategory": {
      "get": {
        "summary": "Get entities from VSalesByCategory",
        "operationId": "VSalesByCategory.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CategoryName",
                  "ProductName",
                  "ProductSales"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CategoryName",
                  "CategoryName desc",
                  "ProductName",
                  "ProductName desc",
                  "ProductSales",
                  "ProductSales desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of VSalesByCategory",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "VSalesByCategory",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/VSalesByCategory"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/VSalesByCategoryApi": {
      "get": {
        "summary": "Get entity from VSalesByCategory by key",
        "operationId": "VSalesByCategory.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "VSalesByCategory",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CategoryName",
                  "ProductName",
                  "ProductSales"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VSalesByCategory"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to VSalesByCategory",
        "operationId": "VSalesByCategory.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VSalesByCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "VSalesByCategory",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/VSalesByCategory"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in VSalesByCategory",
        "operationId": "VSalesByCategory.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VSalesByCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "VSalesByCategory",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/VSalesByCategory"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from VSalesByCategory",
        "operationId": "VSalesByCategory.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "VSalesByCategory",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "VSalesByCategory",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/VSalesByCategory"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/qCategories": {
      "get": {
        "summary": "Get entities from qCategories",
        "operationId": "qCategories.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CategoryName",
                  "Description",
                  "Picture",
                  "Id"
                ],
                "type": "string",
                "default": "CategoryName"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CategoryName",
                  "CategoryName desc",
                  "Description",
                  "Description desc",
                  "Picture",
                  "Picture desc",
                  "Id",
                  "Id desc"
                ],
                "type": "string",
                "default": "CategoryName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of qCategories",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "qCategories",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/qCategories"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/qCategoriesApi": {
      "get": {
        "summary": "Get entity from qCategories by key",
        "operationId": "qCategories.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "qCategories",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CategoryName",
                  "Description",
                  "Picture",
                  "Id"
                ],
                "type": "string",
                "default": "CategoryName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qCategories"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/qCustomers": {
      "get": {
        "summary": "Get entities from qCustomers",
        "operationId": "qCustomers.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CompanyName",
                  "CompanyName desc",
                  "ContactName",
                  "ContactName desc",
                  "ContactTitle",
                  "ContactTitle desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "Phone",
                  "Phone desc",
                  "Fax",
                  "Fax desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of qCustomers",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "qCustomers",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/qCustomers"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/qCustomersApi": {
      "get": {
        "summary": "Get entity from qCustomers by key",
        "operationId": "qCustomers.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "qCustomers",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qCustomers"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/qEmployees": {
      "get": {
        "summary": "Get entities from qEmployees",
        "operationId": "qEmployees.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "LastName",
                  "FirstName",
                  "Title",
                  "TitleOfCourtesy",
                  "BirthDate",
                  "HireDate",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "HomePhone",
                  "Extension",
                  "Notes",
                  "ReportsTo",
                  "Employee_FullName"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "LastName",
                  "LastName desc",
                  "FirstName",
                  "FirstName desc",
                  "Title",
                  "Title desc",
                  "TitleOfCourtesy",
                  "TitleOfCourtesy desc",
                  "BirthDate",
                  "BirthDate desc",
                  "HireDate",
                  "HireDate desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "HomePhone",
                  "HomePhone desc",
                  "Extension",
                  "Extension desc",
                  "Notes",
                  "Notes desc",
                  "ReportsTo",
                  "ReportsTo desc",
                  "Employee_FullName",
                  "Employee_FullName desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of qEmployees",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "qEmployees",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/qEmployees"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/qEmployeesApi": {
      "get": {
        "summary": "Get entity from qEmployees by key",
        "operationId": "qEmployees.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "qEmployees",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "LastName",
                  "FirstName",
                  "Title",
                  "TitleOfCourtesy",
                  "BirthDate",
                  "HireDate",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "HomePhone",
                  "Extension",
                  "Notes",
                  "ReportsTo",
                  "Employee_FullName"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qEmployees"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/qOrderProducts": {
      "get": {
        "summary": "Get entities from qOrderProducts",
        "operationId": "qOrderProducts.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "OrderID",
                  "ProductID",
                  "UnitPrice",
                  "Quantity",
                  "Discount",
                  "Orders_Id",
                  "Orders_CustomerID",
                  "Orders_EmployeeID",
                  "Orders_OrderDate",
                  "Orders_RequiredDate",
                  "Orders_ShippedDate",
                  "Orders_ShipVia",
                  "Orders_Freight",
                  "Orders_ShipName",
                  "Orders_ShipAddress",
                  "Orders_ShipCity",
                  "Orders_ShipRegion",
                  "Orders_ShipPostalCode",
                  "Orders_ShipCountry",
                  "Products_Id",
                  "Products_ProductName",
                  "Products_SupplierID",
                  "Products_CategoryID",
                  "Products_QuantityPerUnit",
                  "Products_UnitPrice",
                  "Products_UnitsInStock",
                  "Products_UnitsOnOrder",
                  "Products_ReorderLevel",
                  "Products_Discontinued"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "OrderID",
                  "OrderID desc",
                  "ProductID",
                  "ProductID desc",
                  "UnitPrice",
                  "UnitPrice desc",
                  "Quantity",
                  "Quantity desc",
                  "Discount",
                  "Discount desc",
                  "Orders_Id",
                  "Orders_Id desc",
                  "Orders_CustomerID",
                  "Orders_CustomerID desc",
                  "Orders_EmployeeID",
                  "Orders_EmployeeID desc",
                  "Orders_OrderDate",
                  "Orders_OrderDate desc",
                  "Orders_RequiredDate",
                  "Orders_RequiredDate desc",
                  "Orders_ShippedDate",
                  "Orders_ShippedDate desc",
                  "Orders_ShipVia",
                  "Orders_ShipVia desc",
                  "Orders_Freight",
                  "Orders_Freight desc",
                  "Orders_ShipName",
                  "Orders_ShipName desc",
                  "Orders_ShipAddress",
                  "Orders_ShipAddress desc",
                  "Orders_ShipCity",
                  "Orders_ShipCity desc",
                  "Orders_ShipRegion",
                  "Orders_ShipRegion desc",
                  "Orders_ShipPostalCode",
                  "Orders_ShipPostalCode desc",
                  "Orders_ShipCountry",
                  "Orders_ShipCountry desc",
                  "Products_Id",
                  "Products_Id desc",
                  "Products_ProductName",
                  "Products_ProductName desc",
                  "Products_SupplierID",
                  "Products_SupplierID desc",
                  "Products_CategoryID",
                  "Products_CategoryID desc",
                  "Products_QuantityPerUnit",
                  "Products_QuantityPerUnit desc",
                  "Products_UnitPrice",
                  "Products_UnitPrice desc",
                  "Products_UnitsInStock",
                  "Products_UnitsInStock desc",
                  "Products_UnitsOnOrder",
                  "Products_UnitsOnOrder desc",
                  "Products_ReorderLevel",
                  "Products_ReorderLevel desc",
                  "Products_Discontinued",
                  "Products_Discontinued desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of qOrderProducts",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "qOrderProducts",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/qOrderProducts"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/qOrderProductsApi": {
      "get": {
        "summary": "Get entity from qOrderProducts by key",
        "operationId": "qOrderProducts.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "qOrderProducts",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "OrderID",
                  "ProductID",
                  "UnitPrice",
                  "Quantity",
                  "Discount",
                  "Orders_Id",
                  "Orders_CustomerID",
                  "Orders_EmployeeID",
                  "Orders_OrderDate",
                  "Orders_RequiredDate",
                  "Orders_ShippedDate",
                  "Orders_ShipVia",
                  "Orders_Freight",
                  "Orders_ShipName",
                  "Orders_ShipAddress",
                  "Orders_ShipCity",
                  "Orders_ShipRegion",
                  "Orders_ShipPostalCode",
                  "Orders_ShipCountry",
                  "Products_Id",
                  "Products_ProductName",
                  "Products_SupplierID",
                  "Products_CategoryID",
                  "Products_QuantityPerUnit",
                  "Products_UnitPrice",
                  "Products_UnitsInStock",
                  "Products_UnitsOnOrder",
                  "Products_ReorderLevel",
                  "Products_Discontinued"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qOrderProducts"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/qOrders": {
      "get": {
        "summary": "Get entities from qOrders",
        "operationId": "qOrders.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CustomerID",
                  "EmployeeID",
                  "OrderDate",
                  "RequiredDate",
                  "ShippedDate",
                  "ShipVia",
                  "Freight",
                  "ShipName",
                  "ShipAddress",
                  "ShipCity",
                  "ShipRegion",
                  "ShipPostalCode",
                  "ShipCountry",
                  "Customers_Id",
                  "Customers_CompanyName",
                  "Customers_ContactName",
                  "Customers_ContactTitle",
                  "Customers_Address",
                  "Customers_City",
                  "Customers_Region",
                  "Customers_PostalCode",
                  "Customers_Country",
                  "Customers_Phone",
                  "Customers_Fax",
                  "Employees_Id",
                  "Employees_LastName",
                  "Employees_FirstName",
                  "Employees_Title",
                  "Employees_TitleOfCourtesy",
                  "Employees_BirthDate",
                  "Employees_HireDate",
                  "Employees_Address",
                  "Employees_City",
                  "Employees_Region",
                  "Employees_PostalCode",
                  "Employees_Country",
                  "Employees_HomePhone",
                  "Employees_Extension",
                  "Employees_Notes",
                  "Employees_ReportsTo",
                  "Employees_PhotoPath",
                  "Shippers_Id",
                  "Shippers_CompanyName",
                  "Shippers_Phone",
                  "EmployeeFullName"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CustomerID",
                  "CustomerID desc",
                  "EmployeeID",
                  "EmployeeID desc",
                  "OrderDate",
                  "OrderDate desc",
                  "RequiredDate",
                  "RequiredDate desc",
                  "ShippedDate",
                  "ShippedDate desc",
                  "ShipVia",
                  "ShipVia desc",
                  "Freight",
                  "Freight desc",
                  "ShipName",
                  "ShipName desc",
                  "ShipAddress",
                  "ShipAddress desc",
                  "ShipCity",
                  "ShipCity desc",
                  "ShipRegion",
                  "ShipRegion desc",
                  "ShipPostalCode",
                  "ShipPostalCode desc",
                  "ShipCountry",
                  "ShipCountry desc",
                  "Customers_Id",
                  "Customers_Id desc",
                  "Customers_CompanyName",
                  "Customers_CompanyName desc",
                  "Customers_ContactName",
                  "Customers_ContactName desc",
                  "Customers_ContactTitle",
                  "Customers_ContactTitle desc",
                  "Customers_Address",
                  "Customers_Address desc",
                  "Customers_City",
                  "Customers_City desc",
                  "Customers_Region",
                  "Customers_Region desc",
                  "Customers_PostalCode",
                  "Customers_PostalCode desc",
                  "Customers_Country",
                  "Customers_Country desc",
                  "Customers_Phone",
                  "Customers_Phone desc",
                  "Customers_Fax",
                  "Customers_Fax desc",
                  "Employees_Id",
                  "Employees_Id desc",
                  "Employees_LastName",
                  "Employees_LastName desc",
                  "Employees_FirstName",
                  "Employees_FirstName desc",
                  "Employees_Title",
                  "Employees_Title desc",
                  "Employees_TitleOfCourtesy",
                  "Employees_TitleOfCourtesy desc",
                  "Employees_BirthDate",
                  "Employees_BirthDate desc",
                  "Employees_HireDate",
                  "Employees_HireDate desc",
                  "Employees_Address",
                  "Employees_Address desc",
                  "Employees_City",
                  "Employees_City desc",
                  "Employees_Region",
                  "Employees_Region desc",
                  "Employees_PostalCode",
                  "Employees_PostalCode desc",
                  "Employees_Country",
                  "Employees_Country desc",
                  "Employees_HomePhone",
                  "Employees_HomePhone desc",
                  "Employees_Extension",
                  "Employees_Extension desc",
                  "Employees_Notes",
                  "Employees_Notes desc",
                  "Employees_ReportsTo",
                  "Employees_ReportsTo desc",
                  "Employees_PhotoPath",
                  "Employees_PhotoPath desc",
                  "Shippers_Id",
                  "Shippers_Id desc",
                  "Shippers_CompanyName",
                  "Shippers_CompanyName desc",
                  "Shippers_Phone",
                  "Shippers_Phone desc",
                  "EmployeeFullName",
                  "EmployeeFullName desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of qOrders",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "qOrders",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/qOrders"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/qOrdersApi": {
      "get": {
        "summary": "Get entity from qOrders by key",
        "operationId": "qOrders.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "qOrders",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CustomerID",
                  "EmployeeID",
                  "OrderDate",
                  "RequiredDate",
                  "ShippedDate",
                  "ShipVia",
                  "Freight",
                  "ShipName",
                  "ShipAddress",
                  "ShipCity",
                  "ShipRegion",
                  "ShipPostalCode",
                  "ShipCountry",
                  "Customers_Id",
                  "Customers_CompanyName",
                  "Customers_ContactName",
                  "Customers_ContactTitle",
                  "Customers_Address",
                  "Customers_City",
                  "Customers_Region",
                  "Customers_PostalCode",
                  "Customers_Country",
                  "Customers_Phone",
                  "Customers_Fax",
                  "Employees_Id",
                  "Employees_LastName",
                  "Employees_FirstName",
                  "Employees_Title",
                  "Employees_TitleOfCourtesy",
                  "Employees_BirthDate",
                  "Employees_HireDate",
                  "Employees_Address",
                  "Employees_City",
                  "Employees_Region",
                  "Employees_PostalCode",
                  "Employees_Country",
                  "Employees_HomePhone",
                  "Employees_Extension",
                  "Employees_Notes",
                  "Employees_ReportsTo",
                  "Employees_PhotoPath",
                  "Shippers_Id",
                  "Shippers_CompanyName",
                  "Shippers_Phone",
                  "EmployeeFullName"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qOrders"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/qProducts": {
      "get": {
        "summary": "Get entities from qProducts",
        "operationId": "qProducts.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "ProductName",
                  "SupplierID",
                  "CategoryID",
                  "QuantityPerUnit",
                  "UnitPrice",
                  "UnitsInStock",
                  "UnitsOnOrder",
                  "ReorderLevel",
                  "Discontinued",
                  "Categories_Id",
                  "Categories_CategoryName",
                  "Categories_Description",
                  "Suppliers_Id",
                  "Suppliers_CompanyName",
                  "Suppliers_ContactName",
                  "Suppliers_ContactTitle",
                  "Suppliers_Address",
                  "Suppliers_City",
                  "Suppliers_Region",
                  "Suppliers_PostalCode",
                  "Suppliers_Country",
                  "Suppliers_Phone",
                  "Suppliers_Fax",
                  "Suppliers_HomePage"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "ProductName",
                  "ProductName desc",
                  "SupplierID",
                  "SupplierID desc",
                  "CategoryID",
                  "CategoryID desc",
                  "QuantityPerUnit",
                  "QuantityPerUnit desc",
                  "UnitPrice",
                  "UnitPrice desc",
                  "UnitsInStock",
                  "UnitsInStock desc",
                  "UnitsOnOrder",
                  "UnitsOnOrder desc",
                  "ReorderLevel",
                  "ReorderLevel desc",
                  "Discontinued",
                  "Discontinued desc",
                  "Categories_Id",
                  "Categories_Id desc",
                  "Categories_CategoryName",
                  "Categories_CategoryName desc",
                  "Categories_Description",
                  "Categories_Description desc",
                  "Suppliers_Id",
                  "Suppliers_Id desc",
                  "Suppliers_CompanyName",
                  "Suppliers_CompanyName desc",
                  "Suppliers_ContactName",
                  "Suppliers_ContactName desc",
                  "Suppliers_ContactTitle",
                  "Suppliers_ContactTitle desc",
                  "Suppliers_Address",
                  "Suppliers_Address desc",
                  "Suppliers_City",
                  "Suppliers_City desc",
                  "Suppliers_Region",
                  "Suppliers_Region desc",
                  "Suppliers_PostalCode",
                  "Suppliers_PostalCode desc",
                  "Suppliers_Country",
                  "Suppliers_Country desc",
                  "Suppliers_Phone",
                  "Suppliers_Phone desc",
                  "Suppliers_Fax",
                  "Suppliers_Fax desc",
                  "Suppliers_HomePage",
                  "Suppliers_HomePage desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of qProducts",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "qProducts",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/qProducts"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/qProductsApi": {
      "get": {
        "summary": "Get entity from qProducts by key",
        "operationId": "qProducts.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "qProducts",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "ProductName",
                  "SupplierID",
                  "CategoryID",
                  "QuantityPerUnit",
                  "UnitPrice",
                  "UnitsInStock",
                  "UnitsOnOrder",
                  "ReorderLevel",
                  "Discontinued",
                  "Categories_Id",
                  "Categories_CategoryName",
                  "Categories_Description",
                  "Suppliers_Id",
                  "Suppliers_CompanyName",
                  "Suppliers_ContactName",
                  "Suppliers_ContactTitle",
                  "Suppliers_Address",
                  "Suppliers_City",
                  "Suppliers_Region",
                  "Suppliers_PostalCode",
                  "Suppliers_Country",
                  "Suppliers_Phone",
                  "Suppliers_Fax",
                  "Suppliers_HomePage"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qProducts"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/qShippers": {
      "get": {
        "summary": "Get entities from qShippers",
        "operationId": "qShippers.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "Phone"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CompanyName",
                  "CompanyName desc",
                  "Phone",
                  "Phone desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of qShippers",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "qShippers",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/qShippers"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/qShippersApi": {
      "get": {
        "summary": "Get entity from qShippers by key",
        "operationId": "qShippers.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "qShippers",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "Phone"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qShippers"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/qSuppliers": {
      "get": {
        "summary": "Get entities from qSuppliers",
        "operationId": "qSuppliers.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax",
                  "HomePage",
                  "Id"
                ],
                "type": "string",
                "default": "CompanyName"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CompanyName",
                  "CompanyName desc",
                  "ContactName",
                  "ContactName desc",
                  "ContactTitle",
                  "ContactTitle desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "Phone",
                  "Phone desc",
                  "Fax",
                  "Fax desc",
                  "HomePage",
                  "HomePage desc",
                  "Id",
                  "Id desc"
                ],
                "type": "string",
                "default": "CompanyName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of qSuppliers",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "qSuppliers",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/qSuppliers"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/qSuppliersApi": {
      "get": {
        "summary": "Get entity from qSuppliers by key",
        "operationId": "qSuppliers.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "qSuppliers",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax",
                  "HomePage",
                  "Id"
                ],
                "type": "string",
                "default": "CompanyName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qSuppliers"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/api/testdynamiccolumnsactionservice/GetTestData": {
      "put": {
        "summary": "GetTestData",
        "operationId": "TestDynamicColumnsActionService.GetTestData",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "periodQuantity",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GetTestData response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GetTestData response",
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "description": "GetTestData response",
                      "format": "int32"
                    },
                    "Type": {
                      "$ref": "#/components/schemas/Framework.Action.Result"
                    },
                    "Message": {
                      "title": "Message",
                      "type": "string"
                    },
                    "Details": {
                      "title": "Details",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/Framework.Error.NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Framework.Error.InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "title": "Category",
        "required": [
          "Id",
          "CategoryName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CategoryName": {
            "title": "CategoryName",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "Picture": {
            "title": "Picture",
            "type": "array",
            "items": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer"
            }
          }
        }
      },
      "Customer": {
        "title": "Customer",
        "required": [
          "Id",
          "CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CompanyName": {
            "title": "CompanyName",
            "type": "string"
          },
          "ContactName": {
            "title": "ContactName",
            "type": "string"
          },
          "ContactTitle": {
            "title": "ContactTitle",
            "type": "string"
          },
          "Address": {
            "title": "Address",
            "type": "string"
          },
          "City": {
            "title": "City",
            "type": "string"
          },
          "Region": {
            "title": "Region",
            "type": "string"
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string"
          },
          "Country": {
            "title": "Country",
            "type": "string"
          },
          "Phone": {
            "title": "Phone",
            "type": "string"
          },
          "Fax": {
            "title": "Fax",
            "type": "string"
          }
        }
      },
      "Employee": {
        "title": "Employee",
        "required": [
          "Id",
          "LastName",
          "FirstName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "LastName": {
            "title": "LastName",
            "type": "string"
          },
          "FirstName": {
            "title": "FirstName",
            "type": "string"
          },
          "Title": {
            "title": "Title",
            "type": "string"
          },
          "TitleOfCourtesy": {
            "title": "TitleOfCourtesy",
            "type": "string"
          },
          "BirthDate": {
            "title": "BirthDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "HireDate": {
            "title": "HireDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Address": {
            "title": "Address",
            "type": "string"
          },
          "City": {
            "title": "City",
            "type": "string"
          },
          "Region": {
            "title": "Region",
            "type": "string"
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string"
          },
          "Country": {
            "title": "Country",
            "type": "string"
          },
          "HomePhone": {
            "title": "HomePhone",
            "type": "string"
          },
          "Extension": {
            "title": "Extension",
            "type": "string"
          },
          "Photo": {
            "title": "Photo",
            "type": "array",
            "items": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer"
            }
          },
          "Notes": {
            "title": "Notes",
            "type": "string"
          },
          "ReportsTo": {
            "title": "ReportsTo",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PhotoPath": {
            "title": "PhotoPath",
            "type": "string"
          }
        }
      },
      "Order": {
        "title": "Order",
        "required": [
          "Id"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CustomerID": {
            "title": "CustomerID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "EmployeeID": {
            "title": "EmployeeID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "OrderDate": {
            "title": "OrderDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "RequiredDate": {
            "title": "RequiredDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ShippedDate": {
            "title": "ShippedDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ShipVia": {
            "title": "ShipVia",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Freight": {
            "title": "Freight",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true
          },
          "ShipName": {
            "title": "ShipName",
            "type": "string"
          },
          "ShipAddress": {
            "title": "ShipAddress",
            "type": "string"
          },
          "ShipCity": {
            "title": "ShipCity",
            "type": "string"
          },
          "ShipRegion": {
            "title": "ShipRegion",
            "type": "string"
          },
          "ShipPostalCode": {
            "title": "ShipPostalCode",
            "type": "string"
          },
          "ShipCountry": {
            "title": "ShipCountry",
            "type": "string"
          },
          "StatusID": {
            "title": "StatusID",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "OrderDetail": {
        "title": "OrderDetail",
        "required": [
          "Id",
          "OrderID",
          "ProductID",
          "UnitPrice",
          "Quantity",
          "Discount"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "OrderID": {
            "title": "OrderID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "ProductID": {
            "title": "ProductID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UnitPrice": {
            "title": "UnitPrice",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number"
          },
          "Quantity": {
            "title": "Quantity",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer"
          },
          "Discount": {
            "title": "Discount",
            "type": "number",
            "format": "float"
          }
        }
      },
      "OrderStatus": {
        "title": "OrderStatus",
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer"
          },
          "Name": {
            "title": "Name",
            "type": "string"
          }
        }
      },
      "Product": {
        "title": "Product",
        "required": [
          "Id",
          "ProductName",
          "Discontinued"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "ProductName": {
            "title": "ProductName",
            "type": "string"
          },
          "SupplierID": {
            "title": "SupplierID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CategoryID": {
            "title": "CategoryID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "QuantityPerUnit": {
            "title": "QuantityPerUnit",
            "type": "string"
          },
          "UnitPrice": {
            "title": "UnitPrice",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true
          },
          "UnitsInStock": {
            "title": "UnitsInStock",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "UnitsOnOrder": {
            "title": "UnitsOnOrder",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "ReorderLevel": {
            "title": "ReorderLevel",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "Discontinued": {
            "title": "Discontinued",
            "type": "boolean"
          }
        }
      },
      "qCategories": {
        "title": "qCategories",
        "required": [
          "CategoryName",
          "Id"
        ],
        "type": "object",
        "properties": {
          "CategoryName": {
            "title": "CategoryName",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "Picture": {
            "title": "Picture",
            "type": "array",
            "items": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer"
            }
          },
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "qCustomers": {
        "title": "qCustomers",
        "required": [
          "Id",
          "CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CompanyName": {
            "title": "CompanyName",
            "type": "string"
          },
          "ContactName": {
            "title": "ContactName",
            "type": "string"
          },
          "ContactTitle": {
            "title": "ContactTitle",
            "type": "string"
          },
          "Address": {
            "title": "Address",
            "type": "string"
          },
          "City": {
            "title": "City",
            "type": "string"
          },
          "Region": {
            "title": "Region",
            "type": "string"
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string"
          },
          "Country": {
            "title": "Country",
            "type": "string"
          },
          "Phone": {
            "title": "Phone",
            "type": "string"
          },
          "Fax": {
            "title": "Fax",
            "type": "string"
          }
        }
      },
      "qEmployees": {
        "title": "qEmployees",
        "required": [
          "Id",
          "LastName",
          "FirstName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "LastName": {
            "title": "LastName",
            "type": "string"
          },
          "FirstName": {
            "title": "FirstName",
            "type": "string"
          },
          "Title": {
            "title": "Title",
            "type": "string"
          },
          "TitleOfCourtesy": {
            "title": "TitleOfCourtesy",
            "type": "string"
          },
          "BirthDate": {
            "title": "BirthDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "HireDate": {
            "title": "HireDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Address": {
            "title": "Address",
            "type": "string"
          },
          "City": {
            "title": "City",
            "type": "string"
          },
          "Region": {
            "title": "Region",
            "type": "string"
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string"
          },
          "Country": {
            "title": "Country",
            "type": "string"
          },
          "HomePhone": {
            "title": "HomePhone",
            "type": "string"
          },
          "Extension": {
            "title": "Extension",
            "type": "string"
          },
          "Notes": {
            "title": "Notes",
            "type": "string"
          },
          "ReportsTo": {
            "title": "ReportsTo",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Employee_FullName": {
            "title": "Employee_FullName",
            "type": "string"
          }
        }
      },
      "qOrderProducts": {
        "title": "qOrderProducts",
        "required": [
          "Id",
          "OrderID",
          "ProductID",
          "UnitPrice",
          "Quantity",
          "Discount",
          "Orders_Id",
          "Products_Id",
          "Products_ProductName",
          "Products_Discontinued"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "OrderID": {
            "title": "OrderID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "ProductID": {
            "title": "ProductID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UnitPrice": {
            "title": "UnitPrice",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number"
          },
          "Quantity": {
            "title": "Quantity",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer"
          },
          "Discount": {
            "title": "Discount",
            "type": "number",
            "format": "float"
          },
          "Orders_Id": {
            "title": "Orders_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Orders_CustomerID": {
            "title": "Orders_CustomerID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Orders_EmployeeID": {
            "title": "Orders_EmployeeID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Orders_OrderDate": {
            "title": "Orders_OrderDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Orders_RequiredDate": {
            "title": "Orders_RequiredDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Orders_ShippedDate": {
            "title": "Orders_ShippedDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Orders_ShipVia": {
            "title": "Orders_ShipVia",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Orders_Freight": {
            "title": "Orders_Freight",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true
          },
          "Orders_ShipName": {
            "title": "Orders_ShipName",
            "type": "string"
          },
          "Orders_ShipAddress": {
            "title": "Orders_ShipAddress",
            "type": "string"
          },
          "Orders_ShipCity": {
            "title": "Orders_ShipCity",
            "type": "string"
          },
          "Orders_ShipRegion": {
            "title": "Orders_ShipRegion",
            "type": "string"
          },
          "Orders_ShipPostalCode": {
            "title": "Orders_ShipPostalCode",
            "type": "string"
          },
          "Orders_ShipCountry": {
            "title": "Orders_ShipCountry",
            "type": "string"
          },
          "Products_Id": {
            "title": "Products_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Products_ProductName": {
            "title": "Products_ProductName",
            "type": "string"
          },
          "Products_SupplierID": {
            "title": "Products_SupplierID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Products_CategoryID": {
            "title": "Products_CategoryID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Products_QuantityPerUnit": {
            "title": "Products_QuantityPerUnit",
            "type": "string"
          },
          "Products_UnitPrice": {
            "title": "Products_UnitPrice",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true
          },
          "Products_UnitsInStock": {
            "title": "Products_UnitsInStock",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "Products_UnitsOnOrder": {
            "title": "Products_UnitsOnOrder",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "Products_ReorderLevel": {
            "title": "Products_ReorderLevel",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "Products_Discontinued": {
            "title": "Products_Discontinued",
            "type": "boolean"
          }
        }
      },
      "qOrders": {
        "title": "qOrders",
        "required": [
          "Id",
          "Customers_Id",
          "Customers_CompanyName",
          "Employees_Id",
          "Employees_LastName",
          "Employees_FirstName",
          "Shippers_Id",
          "Shippers_CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CustomerID": {
            "title": "CustomerID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "EmployeeID": {
            "title": "EmployeeID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "OrderDate": {
            "title": "OrderDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "RequiredDate": {
            "title": "RequiredDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ShippedDate": {
            "title": "ShippedDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ShipVia": {
            "title": "ShipVia",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Freight": {
            "title": "Freight",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true
          },
          "ShipName": {
            "title": "ShipName",
            "type": "string"
          },
          "ShipAddress": {
            "title": "ShipAddress",
            "type": "string"
          },
          "ShipCity": {
            "title": "ShipCity",
            "type": "string"
          },
          "ShipRegion": {
            "title": "ShipRegion",
            "type": "string"
          },
          "ShipPostalCode": {
            "title": "ShipPostalCode",
            "type": "string"
          },
          "ShipCountry": {
            "title": "ShipCountry",
            "type": "string"
          },
          "Customers_Id": {
            "title": "Customers_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Customers_CompanyName": {
            "title": "Customers_CompanyName",
            "type": "string"
          },
          "Customers_ContactName": {
            "title": "Customers_ContactName",
            "type": "string"
          },
          "Customers_ContactTitle": {
            "title": "Customers_ContactTitle",
            "type": "string"
          },
          "Customers_Address": {
            "title": "Customers_Address",
            "type": "string"
          },
          "Customers_City": {
            "title": "Customers_City",
            "type": "string"
          },
          "Customers_Region": {
            "title": "Customers_Region",
            "type": "string"
          },
          "Customers_PostalCode": {
            "title": "Customers_PostalCode",
            "type": "string"
          },
          "Customers_Country": {
            "title": "Customers_Country",
            "type": "string"
          },
          "Customers_Phone": {
            "title": "Customers_Phone",
            "type": "string"
          },
          "Customers_Fax": {
            "title": "Customers_Fax",
            "type": "string"
          },
          "Employees_Id": {
            "title": "Employees_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Employees_LastName": {
            "title": "Employees_LastName",
            "type": "string"
          },
          "Employees_FirstName": {
            "title": "Employees_FirstName",
            "type": "string"
          },
          "Employees_Title": {
            "title": "Employees_Title",
            "type": "string"
          },
          "Employees_TitleOfCourtesy": {
            "title": "Employees_TitleOfCourtesy",
            "type": "string"
          },
          "Employees_BirthDate": {
            "title": "Employees_BirthDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Employees_HireDate": {
            "title": "Employees_HireDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Employees_Address": {
            "title": "Employees_Address",
            "type": "string"
          },
          "Employees_City": {
            "title": "Employees_City",
            "type": "string"
          },
          "Employees_Region": {
            "title": "Employees_Region",
            "type": "string"
          },
          "Employees_PostalCode": {
            "title": "Employees_PostalCode",
            "type": "string"
          },
          "Employees_Country": {
            "title": "Employees_Country",
            "type": "string"
          },
          "Employees_HomePhone": {
            "title": "Employees_HomePhone",
            "type": "string"
          },
          "Employees_Extension": {
            "title": "Employees_Extension",
            "type": "string"
          },
          "Employees_Notes": {
            "title": "Employees_Notes",
            "type": "string"
          },
          "Employees_ReportsTo": {
            "title": "Employees_ReportsTo",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Employees_PhotoPath": {
            "title": "Employees_PhotoPath",
            "type": "string"
          },
          "Shippers_Id": {
            "title": "Shippers_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Shippers_CompanyName": {
            "title": "Shippers_CompanyName",
            "type": "string"
          },
          "Shippers_Phone": {
            "title": "Shippers_Phone",
            "type": "string"
          },
          "EmployeeFullName": {
            "title": "EmployeeFullName",
            "type": "string"
          }
        }
      },
      "qProducts": {
        "title": "qProducts",
        "required": [
          "Id",
          "ProductName",
          "Discontinued",
          "Categories_Id",
          "Categories_CategoryName",
          "Suppliers_Id",
          "Suppliers_CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "ProductName": {
            "title": "ProductName",
            "type": "string"
          },
          "SupplierID": {
            "title": "SupplierID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CategoryID": {
            "title": "CategoryID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "QuantityPerUnit": {
            "title": "QuantityPerUnit",
            "type": "string"
          },
          "UnitPrice": {
            "title": "UnitPrice",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true
          },
          "UnitsInStock": {
            "title": "UnitsInStock",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "UnitsOnOrder": {
            "title": "UnitsOnOrder",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "ReorderLevel": {
            "title": "ReorderLevel",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "Discontinued": {
            "title": "Discontinued",
            "type": "boolean"
          },
          "Categories_Id": {
            "title": "Categories_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Categories_CategoryName": {
            "title": "Categories_CategoryName",
            "type": "string"
          },
          "Categories_Description": {
            "title": "Categories_Description",
            "type": "string"
          },
          "Suppliers_Id": {
            "title": "Suppliers_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Suppliers_CompanyName": {
            "title": "Suppliers_CompanyName",
            "type": "string"
          },
          "Suppliers_ContactName": {
            "title": "Suppliers_ContactName",
            "type": "string"
          },
          "Suppliers_ContactTitle": {
            "title": "Suppliers_ContactTitle",
            "type": "string"
          },
          "Suppliers_Address": {
            "title": "Suppliers_Address",
            "type": "string"
          },
          "Suppliers_City": {
            "title": "Suppliers_City",
            "type": "string"
          },
          "Suppliers_Region": {
            "title": "Suppliers_Region",
            "type": "string"
          },
          "Suppliers_PostalCode": {
            "title": "Suppliers_PostalCode",
            "type": "string"
          },
          "Suppliers_Country": {
            "title": "Suppliers_Country",
            "type": "string"
          },
          "Suppliers_Phone": {
            "title": "Suppliers_Phone",
            "type": "string"
          },
          "Suppliers_Fax": {
            "title": "Suppliers_Fax",
            "type": "string"
          },
          "Suppliers_HomePage": {
            "title": "Suppliers_HomePage",
            "type": "string"
          }
        }
      },
      "qShippers": {
        "title": "qShippers",
        "required": [
          "Id",
          "CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CompanyName": {
            "title": "CompanyName",
            "type": "string"
          },
          "Phone": {
            "title": "Phone",
            "type": "string"
          }
        }
      },
      "qSuppliers": {
        "title": "qSuppliers",
        "required": [
          "CompanyName",
          "Id"
        ],
        "type": "object",
        "properties": {
          "CompanyName": {
            "title": "CompanyName",
            "type": "string"
          },
          "ContactName": {
            "title": "ContactName",
            "type": "string"
          },
          "ContactTitle": {
            "title": "ContactTitle",
            "type": "string"
          },
          "Address": {
            "title": "Address",
            "type": "string"
          },
          "City": {
            "title": "City",
            "type": "string"
          },
          "Region": {
            "title": "Region",
            "type": "string"
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string"
          },
          "Country": {
            "title": "Country",
            "type": "string"
          },
          "Phone": {
            "title": "Phone",
            "type": "string"
          },
          "Fax": {
            "title": "Fax",
            "type": "string"
          },
          "HomePage": {
            "title": "HomePage",
            "type": "string"
          },
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Shipper": {
        "title": "Shipper",
        "required": [
          "Id",
          "CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CompanyName": {
            "title": "CompanyName",
            "type": "string"
          },
          "Phone": {
            "title": "Phone",
            "type": "string"
          }
        }
      },
      "Supplier": {
        "title": "Supplier",
        "required": [
          "Id",
          "CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CompanyName": {
            "title": "CompanyName",
            "type": "string"
          },
          "ContactName": {
            "title": "ContactName",
            "type": "string"
          },
          "ContactTitle": {
            "title": "ContactTitle",
            "type": "string"
          },
          "Address": {
            "title": "Address",
            "type": "string"
          },
          "City": {
            "title": "City",
            "type": "string"
          },
          "Region": {
            "title": "Region",
            "type": "string"
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string"
          },
          "Country": {
            "title": "Country",
            "type": "string"
          },
          "Phone": {
            "title": "Phone",
            "type": "string"
          },
          "Fax": {
            "title": "Fax",
            "type": "string"
          },
          "HomePage": {
            "title": "HomePage",
            "type": "string"
          }
        }
      },
      "SysOperationLock": {
        "title": "SysOperationLock",
        "required": [
          "OperationName",
          "OperationContext",
          "AquiredTime",
          "ExpirationTime"
        ],
        "type": "object",
        "properties": {
          "OperationName": {
            "title": "OperationName",
            "type": "string"
          },
          "OperationContext": {
            "title": "OperationContext",
            "type": "string"
          },
          "MachineName": {
            "title": "MachineName",
            "type": "string"
          },
          "ProcessId": {
            "title": "ProcessId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AquiredTime": {
            "title": "AquiredTime",
            "type": "string",
            "format": "date-time"
          },
          "ExpirationTime": {
            "title": "ExpirationTime",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SysPermission": {
        "title": "SysPermission",
        "required": [
          "Id",
          "Type",
          "CodeName",
          "ObjectId",
          "Guid"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Type": {
            "title": "Type",
            "maximum": 255,
            "minimum": 0,
            "type": "integer"
          },
          "CodeName": {
            "title": "CodeName",
            "type": "string"
          },
          "DisplayName": {
            "title": "DisplayName",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "ObjectId": {
            "title": "ObjectId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Guid": {
            "title": "Guid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "SysPermissionType": {
        "title": "SysPermissionType",
        "required": [
          "Id",
          "CodeName",
          "DisplayName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 255,
            "minimum": 0,
            "type": "integer"
          },
          "CodeName": {
            "title": "CodeName",
            "type": "string"
          },
          "DisplayName": {
            "title": "DisplayName",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          }
        }
      },
      "SysResetPasswordToken": {
        "title": "SysResetPasswordToken",
        "required": [
          "Id",
          "UserId",
          "Token",
          "ValidFrom",
          "IsExecuted"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "title": "UserId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Token": {
            "title": "Token",
            "type": "string"
          },
          "ValidFrom": {
            "title": "ValidFrom",
            "type": "string",
            "format": "date-time"
          },
          "IsExecuted": {
            "title": "IsExecuted",
            "type": "boolean"
          }
        }
      },
      "SysRole": {
        "title": "SysRole",
        "required": [
          "Id",
          "Name",
          "IsOwnByUser",
          "IsSystem"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "title": "Name",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "OwnerUserID": {
            "title": "OwnerUserID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IsOwnByUser": {
            "title": "IsOwnByUser",
            "type": "boolean"
          },
          "IsSystem": {
            "title": "IsSystem",
            "type": "boolean"
          }
        }
      },
      "SysRolePermission": {
        "title": "SysRolePermission",
        "required": [
          "Id",
          "RoleId",
          "PermissionId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "RoleId": {
            "title": "RoleId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "PermissionId": {
            "title": "PermissionId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SysSetting": {
        "title": "SysSetting",
        "required": [
          "Id",
          "SettingPropertyId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "SettingPropertyId": {
            "title": "SettingPropertyId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "title": "UserId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StringValue": {
            "title": "StringValue",
            "type": "string"
          }
        }
      },
      "SysSettingProperty": {
        "title": "SysSettingProperty",
        "required": [
          "Id",
          "Name",
          "IsManaged",
          "IsOverridable"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "title": "Name",
            "type": "string"
          },
          "IsManaged": {
            "title": "IsManaged",
            "type": "boolean"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "UIEditorType": {
            "title": "UIEditorType",
            "type": "string"
          },
          "GroupName": {
            "title": "GroupName",
            "type": "string"
          },
          "IsOverridable": {
            "title": "IsOverridable",
            "type": "boolean"
          },
          "DefaultType": {
            "title": "DefaultType",
            "type": "string"
          }
        }
      },
      "SysUser": {
        "title": "SysUser",
        "required": [
          "Id",
          "AccountName",
          "DisplayName",
          "IsDeactivated",
          "IsSystemUser",
          "FullAccess",
          "IsEmailConfirmed",
          "IsAnonymous",
          "CreateDate"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "AccountName": {
            "title": "AccountName",
            "type": "string"
          },
          "DisplayName": {
            "title": "DisplayName",
            "type": "string"
          },
          "IsDeactivated": {
            "title": "IsDeactivated",
            "type": "boolean"
          },
          "IsSystemUser": {
            "title": "IsSystemUser",
            "type": "boolean"
          },
          "EMail": {
            "title": "EMail",
            "type": "string"
          },
          "FullAccess": {
            "title": "FullAccess",
            "type": "boolean"
          },
          "DeactivationDate": {
            "title": "DeactivationDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "PasswordHash": {
            "title": "PasswordHash",
            "type": "array",
            "items": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer"
            }
          },
          "IsEmailConfirmed": {
            "title": "IsEmailConfirmed",
            "type": "boolean"
          },
          "EmailToken": {
            "title": "EmailToken",
            "type": "string"
          },
          "IsAnonymous": {
            "title": "IsAnonymous",
            "type": "boolean"
          },
          "CreateDate": {
            "title": "CreateDate",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SysUserPermissionsDisplayView": {
        "title": "SysUserPermissionsDisplayView",
        "required": [
          "UserId",
          "PermissionId"
        ],
        "type": "object",
        "properties": {
          "UserId": {
            "title": "UserId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "PermissionId": {
            "title": "PermissionId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "PermissionName": {
            "title": "PermissionName",
            "type": "string"
          },
          "Roles": {
            "title": "Roles",
            "type": "string"
          }
        }
      },
      "SysUserRole": {
        "title": "SysUserRole",
        "required": [
          "Id",
          "UserId",
          "RoleId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "title": "UserId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "RoleId": {
            "title": "RoleId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SysUsersDisplayView": {
        "title": "SysUsersDisplayView",
        "required": [
          "Id"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UserRoleId": {
            "title": "UserRoleId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "VSalesByCategory": {
        "title": "VSalesByCategory",
        "required": [
          "Id",
          "CategoryName",
          "ProductName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CategoryName": {
            "title": "CategoryName",
            "type": "string"
          },
          "ProductName": {
            "title": "ProductName",
            "type": "string"
          },
          "ProductSales": {
            "title": "ProductSales",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true
          }
        }
      },
      "OData.Error.NotFound": {
        "title": "OData.Error.Main",
        "allOf": [
          {
            "$ref": "#/components/schemas/OData.Error.Main"
          }
        ],
        "description": "Not found"
      },
      "OData.Error.Default": {
        "title": "OData.Error.Default",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "title": "OData.Error.Main",
            "allOf": [
              {
                "$ref": "#/components/schemas/OData.Error.Main"
              }
            ],
            "description": "Error"
          }
        },
        "description": "Error"
      },
      "OData.Error.Main": {
        "title": "OData.Error.Main",
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          },
          "message": {
            "title": "message",
            "type": "string"
          },
          "target": {
            "title": "target",
            "type": "string"
          },
          "details": {
            "title": "details",
            "type": "array",
            "items": {
              "title": "OData.Error.Detail",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OData.Error.Detail"
                }
              ],
              "description": "Error detail"
            }
          },
          "innererror": {
            "title": "innererror",
            "type": "object",
            "description": "The structure of this object is service-specific"
          }
        },
        "description": "Error"
      },
      "OData.Error.Detail": {
        "title": "OData.Error.Detail",
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          },
          "message": {
            "title": "message",
            "type": "string"
          },
          "target": {
            "title": "target",
            "type": "string"
          }
        },
        "description": "Error detail"
      },
      "Framework.Action.Result": {
        "title": "Action result type",
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "The following types of result of the action are possible: 0 - None, 1 - Success, 2 - Fail, 3 - Canceled",
        "format": "int32"
      },
      "Framework.Error.NotFound": {
        "title": "Framework.Error.NotFound",
        "type": "object",
        "properties": {
          "Message": {
            "title": "Message",
            "type": "string"
          },
          "MessageDetail": {
            "title": "MessageDetail",
            "type": "string"
          }
        },
        "description": "Not found"
      },
      "Framework.Error.InternalServerError": {
        "title": "Framework.Error.InternalServerError",
        "type": "object",
        "properties": {
          "Message": {
            "title": "Message",
            "type": "string"
          },
          "ExceptionMessage": {
            "title": "ExceptionMessage",
            "type": "string"
          },
          "ExceptionType": {
            "title": "ExceptionType",
            "type": "string"
          },
          "StackTrace": {
            "title": "StackTrace",
            "type": "string"
          }
        },
        "description": "Not found"
      }
    },
    "responses": {
      "OData.Error.NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "title": "OData.Error.NotFound",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OData.Error.NotFound"
                }
              ]
            }
          }
        }
      },
      "OData.Error.Default": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "title": "OData.Error.Default",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OData.Error.Default"
                }
              ]
            }
          }
        }
      },
      "Framework.Error.NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "title": "Framework.Error.NotFound",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework.Error.NotFound"
                }
              ]
            }
          }
        }
      },
      "Framework.Error.InternalServerError": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "title": "Framework.Error.InternalServerError",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework.Error.InternalServerError"
                }
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "OData.count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "schema": {
          "type": "boolean"
        }
      },
      "OData.expand": {
        "name": "$expand",
        "in": "query",
        "description": "Expand related entities",
        "schema": {
          "enum": [
            "*"
          ],
          "type": "boolean",
          "default": "*"
        }
      },
      "OData.filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "schema": {
          "type": "string"
        }
      },
      "OData.search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "schema": {
          "type": "string"
        }
      },
      "OData.skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "schema": {
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer",
          "format": "int32"
        }
      },
      "OData.top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "schema": {
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "securitySchemes": {
      "default": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "http://localhost:9351/token",
            "scopes": { }
          }
        }
      }
    }
  }
}