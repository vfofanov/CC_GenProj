{
  "openapi": "3.0.1",
  "info": {
    "title": "NorthWind",
    "version": "1.0.0.50"
  },
  "servers": [
    {
      "url": "http://localhost:9351/api"
    }
  ],
  "paths": {
    "/odata/Categories": {
      "get": {
        "summary": "Get entities from Categories",
        "operationId": "Categories.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CategoryName",
                  "Description",
                  "Picture"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CategoryName",
                  "CategoryName desc",
                  "Description",
                  "Description desc",
                  "Picture",
                  "Picture desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Categories",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Categories",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Categories"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/CategoriesApi": {
      "get": {
        "summary": "Get entity from Categories by key",
        "operationId": "Categories.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Categories",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CategoryName",
                  "Description",
                  "Picture"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Categories",
        "operationId": "Categories.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Categories"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Categories",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Categories"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Categories",
        "operationId": "Categories.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Categories"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Categories",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Categories"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Categories",
        "operationId": "Categories.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Categories",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Categories",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Categories"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/CustomerCustomerDemo": {
      "get": {
        "summary": "Get entities from CustomerCustomerDemo",
        "operationId": "CustomerCustomerDemo.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CustomerID",
                  "CustomerTypeID"
                ],
                "type": "string",
                "default": "CustomerID"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CustomerID",
                  "CustomerID desc",
                  "CustomerTypeID",
                  "CustomerTypeID desc"
                ],
                "type": "string",
                "default": "CustomerID"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of CustomerCustomerDemo",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "CustomerCustomerDemo",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/CustomerCustomerDemo"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/CustomerCustomerDemoApi": {
      "get": {
        "summary": "Get entity from CustomerCustomerDemo by key",
        "operationId": "CustomerCustomerDemo.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: CustomerID, CustomerTypeID",
            "required": true,
            "schema": {
              "title": "CustomerCustomerDemo",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CustomerID",
                  "CustomerTypeID"
                ],
                "type": "string",
                "default": "CustomerID"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCustomerDemo"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to CustomerCustomerDemo",
        "operationId": "CustomerCustomerDemo.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCustomerDemo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "CustomerCustomerDemo",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/CustomerCustomerDemo"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in CustomerCustomerDemo",
        "operationId": "CustomerCustomerDemo.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCustomerDemo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "CustomerCustomerDemo",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/CustomerCustomerDemo"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from CustomerCustomerDemo",
        "operationId": "CustomerCustomerDemo.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: CustomerID, CustomerTypeID",
            "required": true,
            "schema": {
              "title": "CustomerCustomerDemo",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "CustomerCustomerDemo",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/CustomerCustomerDemo"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/CustomerDemographic": {
      "get": {
        "summary": "Get entities from CustomerDemographic",
        "operationId": "CustomerDemographic.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CustomerDesc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CustomerDesc",
                  "CustomerDesc desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of CustomerDemographic",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "CustomerDemographic",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/CustomerDemographic"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/CustomerDemographicApi": {
      "get": {
        "summary": "Get entity from CustomerDemographic by key",
        "operationId": "CustomerDemographic.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "CustomerDemographic",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CustomerDesc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDemographic"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to CustomerDemographic",
        "operationId": "CustomerDemographic.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDemographic"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "CustomerDemographic",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/CustomerDemographic"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in CustomerDemographic",
        "operationId": "CustomerDemographic.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDemographic"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "CustomerDemographic",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/CustomerDemographic"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from CustomerDemographic",
        "operationId": "CustomerDemographic.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "CustomerDemographic",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "CustomerDemographic",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/CustomerDemographic"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Customers": {
      "get": {
        "summary": "Get entities from Customers",
        "operationId": "Customers.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CompanyName",
                  "CompanyName desc",
                  "ContactName",
                  "ContactName desc",
                  "ContactTitle",
                  "ContactTitle desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "Phone",
                  "Phone desc",
                  "Fax",
                  "Fax desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Customers",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Customers",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Customers"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/CustomersApi": {
      "get": {
        "summary": "Get entity from Customers by key",
        "operationId": "Customers.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Customers",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customers"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Customers",
        "operationId": "Customers.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Customers",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Customers"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Customers",
        "operationId": "Customers.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Customers",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Customers"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Customers",
        "operationId": "Customers.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Customers",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Customers",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Customers"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Employees": {
      "get": {
        "summary": "Get entities from Employees",
        "operationId": "Employees.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "LastName",
                  "FirstName",
                  "Title",
                  "TitleOfCourtesy",
                  "BirthDate",
                  "HireDate",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "HomePhone",
                  "Extension",
                  "Photo",
                  "Notes",
                  "ReportsTo",
                  "PhotoPath",
                  "DocumentScanFileId"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "LastName",
                  "LastName desc",
                  "FirstName",
                  "FirstName desc",
                  "Title",
                  "Title desc",
                  "TitleOfCourtesy",
                  "TitleOfCourtesy desc",
                  "BirthDate",
                  "BirthDate desc",
                  "HireDate",
                  "HireDate desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "HomePhone",
                  "HomePhone desc",
                  "Extension",
                  "Extension desc",
                  "Photo",
                  "Photo desc",
                  "Notes",
                  "Notes desc",
                  "ReportsTo",
                  "ReportsTo desc",
                  "PhotoPath",
                  "PhotoPath desc",
                  "DocumentScanFileId",
                  "DocumentScanFileId desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Employees",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Employees",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Employees"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/EmployeesApi": {
      "get": {
        "summary": "Get entity from Employees by key",
        "operationId": "Employees.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Employees",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "LastName",
                  "FirstName",
                  "Title",
                  "TitleOfCourtesy",
                  "BirthDate",
                  "HireDate",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "HomePhone",
                  "Extension",
                  "Photo",
                  "Notes",
                  "ReportsTo",
                  "PhotoPath",
                  "DocumentScanFileId"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employees"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Employees",
        "operationId": "Employees.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employees"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Employees",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Employees"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Employees",
        "operationId": "Employees.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employees"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Employees",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Employees"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Employees",
        "operationId": "Employees.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Employees",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Employees",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Employees"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/EmployeeTerritory": {
      "get": {
        "summary": "Get entities from EmployeeTerritory",
        "operationId": "EmployeeTerritory.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "EmployeeID",
                  "TerritoryID"
                ],
                "type": "string",
                "default": "EmployeeID"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "EmployeeID",
                  "EmployeeID desc",
                  "TerritoryID",
                  "TerritoryID desc"
                ],
                "type": "string",
                "default": "EmployeeID"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of EmployeeTerritory",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "EmployeeTerritory",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/EmployeeTerritory"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/EmployeeTerritoryApi": {
      "get": {
        "summary": "Get entity from EmployeeTerritory by key",
        "operationId": "EmployeeTerritory.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: EmployeeID, TerritoryID",
            "required": true,
            "schema": {
              "title": "EmployeeTerritory",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "EmployeeID",
                  "TerritoryID"
                ],
                "type": "string",
                "default": "EmployeeID"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTerritory"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to EmployeeTerritory",
        "operationId": "EmployeeTerritory.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeTerritory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "EmployeeTerritory",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/EmployeeTerritory"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in EmployeeTerritory",
        "operationId": "EmployeeTerritory.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeTerritory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "EmployeeTerritory",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/EmployeeTerritory"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from EmployeeTerritory",
        "operationId": "EmployeeTerritory.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: EmployeeID, TerritoryID",
            "required": true,
            "schema": {
              "title": "EmployeeTerritory",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "EmployeeTerritory",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/EmployeeTerritory"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/OrderDetails": {
      "get": {
        "summary": "Get entities from OrderDetails",
        "operationId": "OrderDetails.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "OrderID",
                  "ProductID",
                  "UnitPrice",
                  "Quantity",
                  "Discount"
                ],
                "type": "string",
                "default": "OrderID"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "OrderID",
                  "OrderID desc",
                  "ProductID",
                  "ProductID desc",
                  "UnitPrice",
                  "UnitPrice desc",
                  "Quantity",
                  "Quantity desc",
                  "Discount",
                  "Discount desc"
                ],
                "type": "string",
                "default": "OrderID"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of OrderDetails",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "OrderDetails",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/OrderDetails"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/OrderDetailsApi": {
      "get": {
        "summary": "Get entity from OrderDetails by key",
        "operationId": "OrderDetails.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: OrderID, ProductID",
            "required": true,
            "schema": {
              "title": "OrderDetails",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "OrderID",
                  "ProductID",
                  "UnitPrice",
                  "Quantity",
                  "Discount"
                ],
                "type": "string",
                "default": "OrderID"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetails"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to OrderDetails",
        "operationId": "OrderDetails.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "OrderDetails",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/OrderDetails"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in OrderDetails",
        "operationId": "OrderDetails.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "OrderDetails",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/OrderDetails"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from OrderDetails",
        "operationId": "OrderDetails.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: OrderID, ProductID",
            "required": true,
            "schema": {
              "title": "OrderDetails",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "OrderDetails",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/OrderDetails"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Orders": {
      "get": {
        "summary": "Get entities from Orders",
        "operationId": "Orders.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CustomerID",
                  "EmployeeID",
                  "OrderDate",
                  "RequiredDate",
                  "ShippedDate",
                  "ShipVia",
                  "Freight",
                  "ShipName",
                  "ShipAddress",
                  "ShipCity",
                  "ShipRegion",
                  "ShipPostalCode",
                  "ShipCountry"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CustomerID",
                  "CustomerID desc",
                  "EmployeeID",
                  "EmployeeID desc",
                  "OrderDate",
                  "OrderDate desc",
                  "RequiredDate",
                  "RequiredDate desc",
                  "ShippedDate",
                  "ShippedDate desc",
                  "ShipVia",
                  "ShipVia desc",
                  "Freight",
                  "Freight desc",
                  "ShipName",
                  "ShipName desc",
                  "ShipAddress",
                  "ShipAddress desc",
                  "ShipCity",
                  "ShipCity desc",
                  "ShipRegion",
                  "ShipRegion desc",
                  "ShipPostalCode",
                  "ShipPostalCode desc",
                  "ShipCountry",
                  "ShipCountry desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Orders",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Orders",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Orders"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/OrdersApi": {
      "get": {
        "summary": "Get entity from Orders by key",
        "operationId": "Orders.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Orders",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CustomerID",
                  "EmployeeID",
                  "OrderDate",
                  "RequiredDate",
                  "ShippedDate",
                  "ShipVia",
                  "Freight",
                  "ShipName",
                  "ShipAddress",
                  "ShipCity",
                  "ShipRegion",
                  "ShipPostalCode",
                  "ShipCountry"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orders"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Orders",
        "operationId": "Orders.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orders"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Orders",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Orders"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Orders",
        "operationId": "Orders.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orders"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Orders",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Orders"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Orders",
        "operationId": "Orders.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Orders",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Orders",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Orders"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Products": {
      "get": {
        "summary": "Get entities from Products",
        "operationId": "Products.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "ProductName",
                  "SupplierID",
                  "CategoryID",
                  "QuantityPerUnit",
                  "UnitPrice",
                  "UnitsInStock",
                  "UnitsOnOrder",
                  "ReorderLevel",
                  "Discontinued"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "ProductName",
                  "ProductName desc",
                  "SupplierID",
                  "SupplierID desc",
                  "CategoryID",
                  "CategoryID desc",
                  "QuantityPerUnit",
                  "QuantityPerUnit desc",
                  "UnitPrice",
                  "UnitPrice desc",
                  "UnitsInStock",
                  "UnitsInStock desc",
                  "UnitsOnOrder",
                  "UnitsOnOrder desc",
                  "ReorderLevel",
                  "ReorderLevel desc",
                  "Discontinued",
                  "Discontinued desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Products",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Products",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Products"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/ProductsApi": {
      "get": {
        "summary": "Get entity from Products by key",
        "operationId": "Products.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Products",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "ProductName",
                  "SupplierID",
                  "CategoryID",
                  "QuantityPerUnit",
                  "UnitPrice",
                  "UnitsInStock",
                  "UnitsOnOrder",
                  "ReorderLevel",
                  "Discontinued"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Products",
        "operationId": "Products.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Products"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Products",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Products"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Products",
        "operationId": "Products.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Products"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Products",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Products"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Products",
        "operationId": "Products.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Products",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Products",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Products"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Region": {
      "get": {
        "summary": "Get entities from Region",
        "operationId": "Region.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "RegionDescription"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "RegionDescription",
                  "RegionDescription desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Region",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Region",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Region"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/RegionApi": {
      "get": {
        "summary": "Get entity from Region by key",
        "operationId": "Region.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Region",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "RegionDescription"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Region",
        "operationId": "Region.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Region",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Region"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Region",
        "operationId": "Region.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Region",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Region"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Region",
        "operationId": "Region.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Region",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Region",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Region"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Shippers": {
      "get": {
        "summary": "Get entities from Shippers",
        "operationId": "Shippers.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "Phone"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CompanyName",
                  "CompanyName desc",
                  "Phone",
                  "Phone desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Shippers",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Shippers",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Shippers"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/ShippersApi": {
      "get": {
        "summary": "Get entity from Shippers by key",
        "operationId": "Shippers.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Shippers",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "Phone"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shippers"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Shippers",
        "operationId": "Shippers.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shippers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Shippers",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Shippers"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Shippers",
        "operationId": "Shippers.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shippers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Shippers",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Shippers"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Shippers",
        "operationId": "Shippers.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Shippers",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Shippers",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Shippers"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Suppliers": {
      "get": {
        "summary": "Get entities from Suppliers",
        "operationId": "Suppliers.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax",
                  "HomePage"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CompanyName",
                  "CompanyName desc",
                  "ContactName",
                  "ContactName desc",
                  "ContactTitle",
                  "ContactTitle desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "Phone",
                  "Phone desc",
                  "Fax",
                  "Fax desc",
                  "HomePage",
                  "HomePage desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Suppliers",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Suppliers",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Suppliers"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SuppliersApi": {
      "get": {
        "summary": "Get entity from Suppliers by key",
        "operationId": "Suppliers.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Suppliers",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax",
                  "HomePage"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Suppliers"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Suppliers",
        "operationId": "Suppliers.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Suppliers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Suppliers",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Suppliers"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Suppliers",
        "operationId": "Suppliers.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Suppliers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Suppliers",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Suppliers"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Suppliers",
        "operationId": "Suppliers.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Suppliers",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Suppliers",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Suppliers"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SysOperationLock": {
      "get": {
        "summary": "Get entities from SysOperationLock",
        "operationId": "SysOperationLock.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "OperationName",
                  "OperationContext",
                  "MachineName",
                  "ProcessId",
                  "AquiredTime",
                  "ExpirationTime"
                ],
                "type": "string",
                "default": "OperationName"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "OperationName",
                  "OperationName desc",
                  "OperationContext",
                  "OperationContext desc",
                  "MachineName",
                  "MachineName desc",
                  "ProcessId",
                  "ProcessId desc",
                  "AquiredTime",
                  "AquiredTime desc",
                  "ExpirationTime",
                  "ExpirationTime desc"
                ],
                "type": "string",
                "default": "OperationName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SysOperationLock",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SysOperationLock",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SysOperationLock"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysOperationLockApi": {
      "get": {
        "summary": "Get entity from SysOperationLock by key",
        "operationId": "SysOperationLock.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: OperationName, OperationContext",
            "required": true,
            "schema": {
              "title": "SysOperationLock",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "OperationName",
                  "OperationContext",
                  "MachineName",
                  "ProcessId",
                  "AquiredTime",
                  "ExpirationTime"
                ],
                "type": "string",
                "default": "OperationName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysOperationLock"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to SysOperationLock",
        "operationId": "SysOperationLock.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysOperationLock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysOperationLock",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysOperationLock"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in SysOperationLock",
        "operationId": "SysOperationLock.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysOperationLock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysOperationLock",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysOperationLock"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysOperationLock",
        "operationId": "SysOperationLock.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: OperationName, OperationContext",
            "required": true,
            "schema": {
              "title": "SysOperationLock",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysOperationLock",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysOperationLock"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysPermissionApi": {
      "put": {
        "summary": "Update entity in SysPermission",
        "operationId": "SysPermission.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysPermission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysPermission",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysPermission"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysPermission",
        "operationId": "SysPermission.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysPermission",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysPermission",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysPermission"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysPermissionTypeApi": {
      "put": {
        "summary": "Update entity in SysPermissionType",
        "operationId": "SysPermissionType.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysPermissionType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysPermissionType",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysPermissionType"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysPermissionType",
        "operationId": "SysPermissionType.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysPermissionType",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysPermissionType",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysPermissionType"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SysResetPasswordToken": {
      "get": {
        "summary": "Get entities from SysResetPasswordToken",
        "operationId": "SysResetPasswordToken.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "UserId",
                  "Token",
                  "ValidFrom",
                  "IsExecuted"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "UserId",
                  "UserId desc",
                  "Token",
                  "Token desc",
                  "ValidFrom",
                  "ValidFrom desc",
                  "IsExecuted",
                  "IsExecuted desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SysResetPasswordToken",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SysResetPasswordToken",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SysResetPasswordToken"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysResetPasswordTokenApi": {
      "get": {
        "summary": "Get entity from SysResetPasswordToken by key",
        "operationId": "SysResetPasswordToken.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysResetPasswordToken",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "UserId",
                  "Token",
                  "ValidFrom",
                  "IsExecuted"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysResetPasswordToken"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to SysResetPasswordToken",
        "operationId": "SysResetPasswordToken.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysResetPasswordToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysResetPasswordToken",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysResetPasswordToken"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in SysResetPasswordToken",
        "operationId": "SysResetPasswordToken.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysResetPasswordToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysResetPasswordToken",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysResetPasswordToken"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysResetPasswordToken",
        "operationId": "SysResetPasswordToken.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysResetPasswordToken",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysResetPasswordToken",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysResetPasswordToken"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SysRole": {
      "get": {
        "summary": "Get entities from SysRole",
        "operationId": "SysRole.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name",
                  "Description",
                  "OwnerUserID",
                  "IsOwnByUser",
                  "IsSystem"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "Name",
                  "Name desc",
                  "Description",
                  "Description desc",
                  "OwnerUserID",
                  "OwnerUserID desc",
                  "IsOwnByUser",
                  "IsOwnByUser desc",
                  "IsSystem",
                  "IsSystem desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SysRole",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SysRole",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SysRole"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysRoleApi": {
      "get": {
        "summary": "Get entity from SysRole by key",
        "operationId": "SysRole.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysRole",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name",
                  "Description",
                  "OwnerUserID",
                  "IsOwnByUser",
                  "IsSystem"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysRole"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to SysRole",
        "operationId": "SysRole.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysRole",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysRole"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in SysRole",
        "operationId": "SysRole.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysRole",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysRole"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysRole",
        "operationId": "SysRole.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysRole",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysRole",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysRole"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysRolePermissionApi": {
      "put": {
        "summary": "Update entity in SysRolePermission",
        "operationId": "SysRolePermission.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRolePermission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysRolePermission",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysRolePermission"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysRolePermission",
        "operationId": "SysRolePermission.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysRolePermission",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysRolePermission",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysRolePermission"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SysSetting": {
      "get": {
        "summary": "Get entities from SysSetting",
        "operationId": "SysSetting.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "SettingPropertyId",
                  "UserId",
                  "StringValue"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "SettingPropertyId",
                  "SettingPropertyId desc",
                  "UserId",
                  "UserId desc",
                  "StringValue",
                  "StringValue desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SysSetting",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SysSetting",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SysSetting"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysSettingApi": {
      "get": {
        "summary": "Get entity from SysSetting by key",
        "operationId": "SysSetting.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysSetting",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "SettingPropertyId",
                  "UserId",
                  "StringValue"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysSetting"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to SysSetting",
        "operationId": "SysSetting.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysSetting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSetting",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSetting"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in SysSetting",
        "operationId": "SysSetting.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysSetting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSetting",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSetting"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysSetting",
        "operationId": "SysSetting.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysSetting",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSetting",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSetting"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SysSettingProperty": {
      "get": {
        "summary": "Get entities from SysSettingProperty",
        "operationId": "SysSettingProperty.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name",
                  "IsManaged",
                  "Description",
                  "UIEditorType",
                  "GroupName",
                  "IsOverridable",
                  "DefaultType"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "Name",
                  "Name desc",
                  "IsManaged",
                  "IsManaged desc",
                  "Description",
                  "Description desc",
                  "UIEditorType",
                  "UIEditorType desc",
                  "GroupName",
                  "GroupName desc",
                  "IsOverridable",
                  "IsOverridable desc",
                  "DefaultType",
                  "DefaultType desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SysSettingProperty",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SysSettingProperty",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SysSettingProperty"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysSettingPropertyApi": {
      "get": {
        "summary": "Get entity from SysSettingProperty by key",
        "operationId": "SysSettingProperty.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysSettingProperty",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name",
                  "IsManaged",
                  "Description",
                  "UIEditorType",
                  "GroupName",
                  "IsOverridable",
                  "DefaultType"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysSettingProperty"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to SysSettingProperty",
        "operationId": "SysSettingProperty.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysSettingProperty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSettingProperty",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSettingProperty"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in SysSettingProperty",
        "operationId": "SysSettingProperty.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysSettingProperty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSettingProperty",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSettingProperty"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysSettingProperty",
        "operationId": "SysSettingProperty.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysSettingProperty",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysSettingProperty",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysSettingProperty"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysUserApi": {
      "put": {
        "summary": "Update entity in SysUser",
        "operationId": "SysUser.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUser",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUser"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysUser",
        "operationId": "SysUser.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysUser",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUser",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUser"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysUserPermissionsDisplayViewApi": {
      "put": {
        "summary": "Update entity in SysUserPermissionsDisplayView",
        "operationId": "SysUserPermissionsDisplayView.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUserPermissionsDisplayView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUserPermissionsDisplayView",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUserPermissionsDisplayView"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysUserPermissionsDisplayView",
        "operationId": "SysUserPermissionsDisplayView.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: UserId, PermissionId",
            "required": true,
            "schema": {
              "title": "SysUserPermissionsDisplayView",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUserPermissionsDisplayView",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUserPermissionsDisplayView"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysUserRoleApi": {
      "put": {
        "summary": "Update entity in SysUserRole",
        "operationId": "SysUserRole.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUserRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUserRole",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUserRole"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysUserRole",
        "operationId": "SysUserRole.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysUserRole",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUserRole",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUserRole"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SysUsersDisplayViewApi": {
      "put": {
        "summary": "Update entity in SysUsersDisplayView",
        "operationId": "SysUsersDisplayView.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUsersDisplayView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUsersDisplayView",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUsersDisplayView"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from SysUsersDisplayView",
        "operationId": "SysUsersDisplayView.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SysUsersDisplayView",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "SysUsersDisplayView",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/SysUsersDisplayView"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/Territory": {
      "get": {
        "summary": "Get entities from Territory",
        "operationId": "Territory.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "TerritoryDescription",
                  "RegionID"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "TerritoryDescription",
                  "TerritoryDescription desc",
                  "RegionID",
                  "RegionID desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Territory",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "Territory",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Territory"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/TerritoryApi": {
      "get": {
        "summary": "Get entity from Territory by key",
        "operationId": "Territory.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Territory",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "TerritoryDescription",
                  "RegionID"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Territory"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Territory",
        "operationId": "Territory.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Territory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Territory",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Territory"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "put": {
        "summary": "Update entity in Territory",
        "operationId": "Territory.Update",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Territory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Territory",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Territory"
                            }
                          ],
                          "description": "Updated entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Territory",
        "operationId": "Territory.Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "Territory",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "Territory",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Territory"
                            }
                          ],
                          "description": "Success"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/CategoryQuery": {
      "get": {
        "summary": "Get entities from CategoryQuery",
        "operationId": "CategoryQuery.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CategoryName",
                  "Description",
                  "Picture",
                  "Id"
                ],
                "type": "string",
                "default": "CategoryName"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CategoryName",
                  "CategoryName desc",
                  "Description",
                  "Description desc",
                  "Picture",
                  "Picture desc",
                  "Id",
                  "Id desc"
                ],
                "type": "string",
                "default": "CategoryName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of CategoryQuery",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "CategoryQuery",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/CategoryQuery"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/CategoryQueryApi": {
      "get": {
        "summary": "Get entity from CategoryQuery by key",
        "operationId": "CategoryQuery.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "CategoryQuery",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CategoryName",
                  "Description",
                  "Picture",
                  "Id"
                ],
                "type": "string",
                "default": "CategoryName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryQuery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/CustomerQuery": {
      "get": {
        "summary": "Get entities from CustomerQuery",
        "operationId": "CustomerQuery.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CompanyName",
                  "CompanyName desc",
                  "ContactName",
                  "ContactName desc",
                  "ContactTitle",
                  "ContactTitle desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "Phone",
                  "Phone desc",
                  "Fax",
                  "Fax desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of CustomerQuery",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "CustomerQuery",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/CustomerQuery"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/CustomerQueryApi": {
      "get": {
        "summary": "Get entity from CustomerQuery by key",
        "operationId": "CustomerQuery.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "CustomerQuery",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/EmployeeQuery": {
      "get": {
        "summary": "Get entities from EmployeeQuery",
        "operationId": "EmployeeQuery.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "LastName",
                  "FirstName",
                  "Title",
                  "TitleOfCourtesy",
                  "BirthDate",
                  "HireDate",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "HomePhone",
                  "Extension",
                  "Notes",
                  "ReportsTo",
                  "Employee_FullName",
                  "DocumentScanFileId",
                  "Photo"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "LastName",
                  "LastName desc",
                  "FirstName",
                  "FirstName desc",
                  "Title",
                  "Title desc",
                  "TitleOfCourtesy",
                  "TitleOfCourtesy desc",
                  "BirthDate",
                  "BirthDate desc",
                  "HireDate",
                  "HireDate desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "HomePhone",
                  "HomePhone desc",
                  "Extension",
                  "Extension desc",
                  "Notes",
                  "Notes desc",
                  "ReportsTo",
                  "ReportsTo desc",
                  "Employee_FullName",
                  "Employee_FullName desc",
                  "DocumentScanFileId",
                  "DocumentScanFileId desc",
                  "Photo",
                  "Photo desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of EmployeeQuery",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "EmployeeQuery",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/EmployeeQuery"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/EmployeeQueryApi": {
      "get": {
        "summary": "Get entity from EmployeeQuery by key",
        "operationId": "EmployeeQuery.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "EmployeeQuery",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "LastName",
                  "FirstName",
                  "Title",
                  "TitleOfCourtesy",
                  "BirthDate",
                  "HireDate",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "HomePhone",
                  "Extension",
                  "Notes",
                  "ReportsTo",
                  "Employee_FullName",
                  "DocumentScanFileId",
                  "Photo"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeQuery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/OrderProductQuery": {
      "get": {
        "summary": "Get entities from OrderProductQuery",
        "operationId": "OrderProductQuery.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "OrderID",
                  "ProductID",
                  "UnitPrice",
                  "Quantity",
                  "Discount",
                  "Orders_Id",
                  "Orders_CustomerID",
                  "Orders_EmployeeID",
                  "Orders_OrderDate",
                  "Orders_RequiredDate",
                  "Orders_ShippedDate",
                  "Orders_ShipVia",
                  "Orders_Freight",
                  "Orders_ShipName",
                  "Orders_ShipAddress",
                  "Orders_ShipCity",
                  "Orders_ShipRegion",
                  "Orders_ShipPostalCode",
                  "Orders_ShipCountry",
                  "Products_Id",
                  "Products_ProductName",
                  "Products_SupplierID",
                  "Products_CategoryID",
                  "Products_QuantityPerUnit",
                  "Products_UnitPrice",
                  "Products_UnitsInStock",
                  "Products_UnitsOnOrder",
                  "Products_ReorderLevel",
                  "Products_Discontinued"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "OrderID",
                  "OrderID desc",
                  "ProductID",
                  "ProductID desc",
                  "UnitPrice",
                  "UnitPrice desc",
                  "Quantity",
                  "Quantity desc",
                  "Discount",
                  "Discount desc",
                  "Orders_Id",
                  "Orders_Id desc",
                  "Orders_CustomerID",
                  "Orders_CustomerID desc",
                  "Orders_EmployeeID",
                  "Orders_EmployeeID desc",
                  "Orders_OrderDate",
                  "Orders_OrderDate desc",
                  "Orders_RequiredDate",
                  "Orders_RequiredDate desc",
                  "Orders_ShippedDate",
                  "Orders_ShippedDate desc",
                  "Orders_ShipVia",
                  "Orders_ShipVia desc",
                  "Orders_Freight",
                  "Orders_Freight desc",
                  "Orders_ShipName",
                  "Orders_ShipName desc",
                  "Orders_ShipAddress",
                  "Orders_ShipAddress desc",
                  "Orders_ShipCity",
                  "Orders_ShipCity desc",
                  "Orders_ShipRegion",
                  "Orders_ShipRegion desc",
                  "Orders_ShipPostalCode",
                  "Orders_ShipPostalCode desc",
                  "Orders_ShipCountry",
                  "Orders_ShipCountry desc",
                  "Products_Id",
                  "Products_Id desc",
                  "Products_ProductName",
                  "Products_ProductName desc",
                  "Products_SupplierID",
                  "Products_SupplierID desc",
                  "Products_CategoryID",
                  "Products_CategoryID desc",
                  "Products_QuantityPerUnit",
                  "Products_QuantityPerUnit desc",
                  "Products_UnitPrice",
                  "Products_UnitPrice desc",
                  "Products_UnitsInStock",
                  "Products_UnitsInStock desc",
                  "Products_UnitsOnOrder",
                  "Products_UnitsOnOrder desc",
                  "Products_ReorderLevel",
                  "Products_ReorderLevel desc",
                  "Products_Discontinued",
                  "Products_Discontinued desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of OrderProductQuery",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "OrderProductQuery",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/OrderProductQuery"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/OrderProductQueryApi": {
      "get": {
        "summary": "Get entity from OrderProductQuery by key",
        "operationId": "OrderProductQuery.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id, OrderID, ProductID",
            "required": true,
            "schema": {
              "title": "OrderProductQuery",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "OrderID",
                  "ProductID",
                  "UnitPrice",
                  "Quantity",
                  "Discount",
                  "Orders_Id",
                  "Orders_CustomerID",
                  "Orders_EmployeeID",
                  "Orders_OrderDate",
                  "Orders_RequiredDate",
                  "Orders_ShippedDate",
                  "Orders_ShipVia",
                  "Orders_Freight",
                  "Orders_ShipName",
                  "Orders_ShipAddress",
                  "Orders_ShipCity",
                  "Orders_ShipRegion",
                  "Orders_ShipPostalCode",
                  "Orders_ShipCountry",
                  "Products_Id",
                  "Products_ProductName",
                  "Products_SupplierID",
                  "Products_CategoryID",
                  "Products_QuantityPerUnit",
                  "Products_UnitPrice",
                  "Products_UnitsInStock",
                  "Products_UnitsOnOrder",
                  "Products_ReorderLevel",
                  "Products_Discontinued"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderProductQuery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/OrdersQuery": {
      "get": {
        "summary": "Get entities from OrdersQuery",
        "operationId": "OrdersQuery.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CustomerID",
                  "EmployeeID",
                  "OrderDate",
                  "RequiredDate",
                  "ShippedDate",
                  "ShipVia",
                  "Freight",
                  "ShipName",
                  "ShipAddress",
                  "ShipCity",
                  "ShipRegion",
                  "ShipPostalCode",
                  "ShipCountry",
                  "Customers_Id",
                  "Customers_CompanyName",
                  "Customers_ContactName",
                  "Customers_ContactTitle",
                  "Customers_Address",
                  "Customers_City",
                  "Customers_Region",
                  "Customers_PostalCode",
                  "Customers_Country",
                  "Customers_Phone",
                  "Customers_Fax",
                  "Employees_Id",
                  "Employees_LastName",
                  "Employees_FirstName",
                  "Employees_Title",
                  "Employees_TitleOfCourtesy",
                  "Employees_BirthDate",
                  "Employees_HireDate",
                  "Employees_Address",
                  "Employees_City",
                  "Employees_Region",
                  "Employees_PostalCode",
                  "Employees_Country",
                  "Employees_HomePhone",
                  "Employees_Extension",
                  "Employees_Notes",
                  "Employees_ReportsTo",
                  "Employees_PhotoPath",
                  "Shippers_Id",
                  "Shippers_CompanyName",
                  "Shippers_Phone",
                  "EmployeeFullName"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CustomerID",
                  "CustomerID desc",
                  "EmployeeID",
                  "EmployeeID desc",
                  "OrderDate",
                  "OrderDate desc",
                  "RequiredDate",
                  "RequiredDate desc",
                  "ShippedDate",
                  "ShippedDate desc",
                  "ShipVia",
                  "ShipVia desc",
                  "Freight",
                  "Freight desc",
                  "ShipName",
                  "ShipName desc",
                  "ShipAddress",
                  "ShipAddress desc",
                  "ShipCity",
                  "ShipCity desc",
                  "ShipRegion",
                  "ShipRegion desc",
                  "ShipPostalCode",
                  "ShipPostalCode desc",
                  "ShipCountry",
                  "ShipCountry desc",
                  "Customers_Id",
                  "Customers_Id desc",
                  "Customers_CompanyName",
                  "Customers_CompanyName desc",
                  "Customers_ContactName",
                  "Customers_ContactName desc",
                  "Customers_ContactTitle",
                  "Customers_ContactTitle desc",
                  "Customers_Address",
                  "Customers_Address desc",
                  "Customers_City",
                  "Customers_City desc",
                  "Customers_Region",
                  "Customers_Region desc",
                  "Customers_PostalCode",
                  "Customers_PostalCode desc",
                  "Customers_Country",
                  "Customers_Country desc",
                  "Customers_Phone",
                  "Customers_Phone desc",
                  "Customers_Fax",
                  "Customers_Fax desc",
                  "Employees_Id",
                  "Employees_Id desc",
                  "Employees_LastName",
                  "Employees_LastName desc",
                  "Employees_FirstName",
                  "Employees_FirstName desc",
                  "Employees_Title",
                  "Employees_Title desc",
                  "Employees_TitleOfCourtesy",
                  "Employees_TitleOfCourtesy desc",
                  "Employees_BirthDate",
                  "Employees_BirthDate desc",
                  "Employees_HireDate",
                  "Employees_HireDate desc",
                  "Employees_Address",
                  "Employees_Address desc",
                  "Employees_City",
                  "Employees_City desc",
                  "Employees_Region",
                  "Employees_Region desc",
                  "Employees_PostalCode",
                  "Employees_PostalCode desc",
                  "Employees_Country",
                  "Employees_Country desc",
                  "Employees_HomePhone",
                  "Employees_HomePhone desc",
                  "Employees_Extension",
                  "Employees_Extension desc",
                  "Employees_Notes",
                  "Employees_Notes desc",
                  "Employees_ReportsTo",
                  "Employees_ReportsTo desc",
                  "Employees_PhotoPath",
                  "Employees_PhotoPath desc",
                  "Shippers_Id",
                  "Shippers_Id desc",
                  "Shippers_CompanyName",
                  "Shippers_CompanyName desc",
                  "Shippers_Phone",
                  "Shippers_Phone desc",
                  "EmployeeFullName",
                  "EmployeeFullName desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of OrdersQuery",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "OrdersQuery",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/OrdersQuery"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/OrdersQueryApi": {
      "get": {
        "summary": "Get entity from OrdersQuery by key",
        "operationId": "OrdersQuery.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "OrdersQuery",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CustomerID",
                  "EmployeeID",
                  "OrderDate",
                  "RequiredDate",
                  "ShippedDate",
                  "ShipVia",
                  "Freight",
                  "ShipName",
                  "ShipAddress",
                  "ShipCity",
                  "ShipRegion",
                  "ShipPostalCode",
                  "ShipCountry",
                  "Customers_Id",
                  "Customers_CompanyName",
                  "Customers_ContactName",
                  "Customers_ContactTitle",
                  "Customers_Address",
                  "Customers_City",
                  "Customers_Region",
                  "Customers_PostalCode",
                  "Customers_Country",
                  "Customers_Phone",
                  "Customers_Fax",
                  "Employees_Id",
                  "Employees_LastName",
                  "Employees_FirstName",
                  "Employees_Title",
                  "Employees_TitleOfCourtesy",
                  "Employees_BirthDate",
                  "Employees_HireDate",
                  "Employees_Address",
                  "Employees_City",
                  "Employees_Region",
                  "Employees_PostalCode",
                  "Employees_Country",
                  "Employees_HomePhone",
                  "Employees_Extension",
                  "Employees_Notes",
                  "Employees_ReportsTo",
                  "Employees_PhotoPath",
                  "Shippers_Id",
                  "Shippers_CompanyName",
                  "Shippers_Phone",
                  "EmployeeFullName"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersQuery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/ProductQuery": {
      "get": {
        "summary": "Get entities from ProductQuery",
        "operationId": "ProductQuery.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "ProductName",
                  "SupplierID",
                  "CategoryID",
                  "QuantityPerUnit",
                  "UnitPrice",
                  "UnitsInStock",
                  "UnitsOnOrder",
                  "ReorderLevel",
                  "Discontinued",
                  "Categories_Id",
                  "Categories_CategoryName",
                  "Categories_Description",
                  "Suppliers_Id",
                  "Suppliers_CompanyName",
                  "Suppliers_ContactName",
                  "Suppliers_ContactTitle",
                  "Suppliers_Address",
                  "Suppliers_City",
                  "Suppliers_Region",
                  "Suppliers_PostalCode",
                  "Suppliers_Country",
                  "Suppliers_Phone",
                  "Suppliers_Fax",
                  "Suppliers_HomePage"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "ProductName",
                  "ProductName desc",
                  "SupplierID",
                  "SupplierID desc",
                  "CategoryID",
                  "CategoryID desc",
                  "QuantityPerUnit",
                  "QuantityPerUnit desc",
                  "UnitPrice",
                  "UnitPrice desc",
                  "UnitsInStock",
                  "UnitsInStock desc",
                  "UnitsOnOrder",
                  "UnitsOnOrder desc",
                  "ReorderLevel",
                  "ReorderLevel desc",
                  "Discontinued",
                  "Discontinued desc",
                  "Categories_Id",
                  "Categories_Id desc",
                  "Categories_CategoryName",
                  "Categories_CategoryName desc",
                  "Categories_Description",
                  "Categories_Description desc",
                  "Suppliers_Id",
                  "Suppliers_Id desc",
                  "Suppliers_CompanyName",
                  "Suppliers_CompanyName desc",
                  "Suppliers_ContactName",
                  "Suppliers_ContactName desc",
                  "Suppliers_ContactTitle",
                  "Suppliers_ContactTitle desc",
                  "Suppliers_Address",
                  "Suppliers_Address desc",
                  "Suppliers_City",
                  "Suppliers_City desc",
                  "Suppliers_Region",
                  "Suppliers_Region desc",
                  "Suppliers_PostalCode",
                  "Suppliers_PostalCode desc",
                  "Suppliers_Country",
                  "Suppliers_Country desc",
                  "Suppliers_Phone",
                  "Suppliers_Phone desc",
                  "Suppliers_Fax",
                  "Suppliers_Fax desc",
                  "Suppliers_HomePage",
                  "Suppliers_HomePage desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ProductQuery",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "ProductQuery",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ProductQuery"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/ProductQueryApi": {
      "get": {
        "summary": "Get entity from ProductQuery by key",
        "operationId": "ProductQuery.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "ProductQuery",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "ProductName",
                  "SupplierID",
                  "CategoryID",
                  "QuantityPerUnit",
                  "UnitPrice",
                  "UnitsInStock",
                  "UnitsOnOrder",
                  "ReorderLevel",
                  "Discontinued",
                  "Categories_Id",
                  "Categories_CategoryName",
                  "Categories_Description",
                  "Suppliers_Id",
                  "Suppliers_CompanyName",
                  "Suppliers_ContactName",
                  "Suppliers_ContactTitle",
                  "Suppliers_Address",
                  "Suppliers_City",
                  "Suppliers_Region",
                  "Suppliers_PostalCode",
                  "Suppliers_Country",
                  "Suppliers_Phone",
                  "Suppliers_Fax",
                  "Suppliers_HomePage"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/RegionQuery": {
      "get": {
        "summary": "Get entities from RegionQuery",
        "operationId": "RegionQuery.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "RegionDescription"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "RegionDescription",
                  "RegionDescription desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of RegionQuery",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "RegionQuery",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/RegionQuery"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/RegionQueryApi": {
      "get": {
        "summary": "Get entity from RegionQuery by key",
        "operationId": "RegionQuery.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "RegionQuery",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "RegionDescription"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionQuery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/ReportFormQuery": {
      "get": {
        "summary": "Get entities from ReportFormQuery",
        "operationId": "ReportFormQuery.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "From",
                  "To",
                  "EmployeeId",
                  "CustomerId",
                  "useExcel"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "From",
                  "From desc",
                  "To",
                  "To desc",
                  "EmployeeId",
                  "EmployeeId desc",
                  "CustomerId",
                  "CustomerId desc",
                  "useExcel",
                  "useExcel desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ReportFormQuery",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "ReportFormQuery",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ReportFormQuery"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/ReportFormQueryApi": {
      "get": {
        "summary": "Get entity from ReportFormQuery by key",
        "operationId": "ReportFormQuery.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "ReportFormQuery",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "From",
                  "To",
                  "EmployeeId",
                  "CustomerId",
                  "useExcel"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportFormQuery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      },
      "post": {
        "summary": "Add new entity to ReportFormQuery",
        "operationId": "ReportFormQuery.Create",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportFormQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created entity OData wrapper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "type": "object",
                      "properties": {
                        "Type": {
                          "title": "Type",
                          "maximum": 2147483647,
                          "minimum": -2147483648,
                          "type": "integer",
                          "format": "int32"
                        },
                        "Object": {
                          "title": "ReportFormQuery",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/ReportFormQuery"
                            }
                          ],
                          "description": "Created entity"
                        },
                        "ValidationResults": {
                          "title": "ValidationResults",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                          }
                        }
                      }
                    },
                    "Type": {
                      "title": "Type",
                      "maximum": 2147483647,
                      "minimum": -2147483648,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/ShipperQuery": {
      "get": {
        "summary": "Get entities from ShipperQuery",
        "operationId": "ShipperQuery.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "Phone"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "CompanyName",
                  "CompanyName desc",
                  "Phone",
                  "Phone desc"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ShipperQuery",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "ShipperQuery",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ShipperQuery"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/ShipperQueryApi": {
      "get": {
        "summary": "Get entity from ShipperQuery by key",
        "operationId": "ShipperQuery.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "ShipperQuery",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "CompanyName",
                  "Phone"
                ],
                "type": "string",
                "default": "Id"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipperQuery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/odata/SupplierQuery": {
      "get": {
        "summary": "Get entities from SupplierQuery",
        "operationId": "SupplierQuery.Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/OData.count"
          },
          {
            "$ref": "#/components/parameters/OData.filter"
          },
          {
            "$ref": "#/components/parameters/OData.search"
          },
          {
            "$ref": "#/components/parameters/OData.skip"
          },
          {
            "$ref": "#/components/parameters/OData.top"
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax",
                  "HomePage",
                  "Id"
                ],
                "type": "string",
                "default": "CompanyName"
              }
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CompanyName",
                  "CompanyName desc",
                  "ContactName",
                  "ContactName desc",
                  "ContactTitle",
                  "ContactTitle desc",
                  "Address",
                  "Address desc",
                  "City",
                  "City desc",
                  "Region",
                  "Region desc",
                  "PostalCode",
                  "PostalCode desc",
                  "Country",
                  "Country desc",
                  "Phone",
                  "Phone desc",
                  "Fax",
                  "Fax desc",
                  "HomePage",
                  "HomePage desc",
                  "Id",
                  "Id desc"
                ],
                "type": "string",
                "default": "CompanyName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of SupplierQuery",
                  "type": "object",
                  "properties": {
                    "@OData.context": {
                      "title": "@OData.context",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "@OData.count": {
                      "title": "@OData.count",
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "value": {
                      "title": "value",
                      "type": "array",
                      "items": {
                        "title": "SupplierQuery",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SupplierQuery"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/SupplierQueryApi": {
      "get": {
        "summary": "Get entity from SupplierQuery by key",
        "operationId": "SupplierQuery.GetByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key: Id",
            "required": true,
            "schema": {
              "title": "SupplierQuery",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OData.expand"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "CompanyName",
                  "ContactName",
                  "ContactTitle",
                  "Address",
                  "City",
                  "Region",
                  "PostalCode",
                  "Country",
                  "Phone",
                  "Fax",
                  "HomePage",
                  "Id"
                ],
                "type": "string",
                "default": "CompanyName"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierQuery"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/OData.Error.NotFound"
          },
          "default": {
            "$ref": "#/components/responses/OData.Error.Default"
          }
        }
      }
    },
    "/api/reportservice/ServerPrintSimple": {
      "put": {
        "summary": "ServerPrintSimple",
        "operationId": "ReportService.ServerPrintSimple",
        "responses": {
          "200": {
            "description": "ServerPrintSimple response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ServerPrintSimple response",
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Report"
                        }
                      ],
                      "description": "ServerPrintSimple result"
                    },
                    "Type": {
                      "$ref": "#/components/schemas/Framework.Action.Result"
                    },
                    "Message": {
                      "title": "Message",
                      "type": "string"
                    },
                    "Details": {
                      "title": "Details",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/Framework.Error.NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Framework.Error.InternalServerError"
          }
        }
      }
    },
    "/api/reportservice/ServerPrintWithParameter": {
      "put": {
        "summary": "ServerPrintWithParameter",
        "operationId": "ReportService.ServerPrintWithParameter",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ServerPrintWithParameter response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ServerPrintWithParameter response",
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Report"
                        }
                      ],
                      "description": "ServerPrintWithParameter result"
                    },
                    "Type": {
                      "$ref": "#/components/schemas/Framework.Action.Result"
                    },
                    "Message": {
                      "title": "Message",
                      "type": "string"
                    },
                    "Details": {
                      "title": "Details",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/Framework.Error.NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Framework.Error.InternalServerError"
          }
        }
      }
    },
    "/api/reportservice/ServerPrintWithForm": {
      "put": {
        "summary": "ServerPrintWithForm",
        "operationId": "ReportService.ServerPrintWithForm",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "useExcel",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ServerPrintWithForm response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ServerPrintWithForm response",
                  "type": "object",
                  "properties": {
                    "Data": {
                      "title": "Data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Report"
                        }
                      ],
                      "description": "ServerPrintWithForm result"
                    },
                    "Type": {
                      "$ref": "#/components/schemas/Framework.Action.Result"
                    },
                    "Message": {
                      "title": "Message",
                      "type": "string"
                    },
                    "Details": {
                      "title": "Details",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/Framework.Error.NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Framework.Error.InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Categories": {
        "title": "Categories",
        "required": [
          "Id",
          "CategoryName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CategoryName": {
            "title": "CategoryName",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "Picture": {
            "title": "Picture",
            "type": "array",
            "items": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer"
            }
          }
        }
      },
      "CategoryQuery": {
        "title": "CategoryQuery",
        "required": [
          "CategoryName",
          "Id"
        ],
        "type": "object",
        "properties": {
          "CategoryName": {
            "title": "CategoryName",
            "type": "string",
            "readOnly": true
          },
          "Description": {
            "title": "Description",
            "type": "string",
            "readOnly": true
          },
          "Picture": {
            "title": "Picture",
            "type": "array",
            "items": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer"
            }
          },
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "CustomerCustomerDemo": {
        "title": "CustomerCustomerDemo",
        "required": [
          "CustomerID",
          "CustomerTypeID"
        ],
        "type": "object",
        "properties": {
          "CustomerID": {
            "title": "CustomerID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CustomerTypeID": {
            "title": "CustomerTypeID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CustomerDemographic": {
        "title": "CustomerDemographic",
        "required": [
          "Id"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CustomerDesc": {
            "title": "CustomerDesc",
            "type": "string"
          }
        }
      },
      "CustomerQuery": {
        "title": "CustomerQuery",
        "required": [
          "Id",
          "CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "CompanyName": {
            "title": "CompanyName",
            "type": "string",
            "readOnly": true
          },
          "ContactName": {
            "title": "ContactName",
            "type": "string",
            "readOnly": true
          },
          "ContactTitle": {
            "title": "ContactTitle",
            "type": "string",
            "readOnly": true
          },
          "Address": {
            "title": "Address",
            "type": "string",
            "readOnly": true
          },
          "City": {
            "title": "City",
            "type": "string",
            "readOnly": true
          },
          "Region": {
            "title": "Region",
            "type": "string",
            "readOnly": true
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string",
            "readOnly": true
          },
          "Country": {
            "title": "Country",
            "type": "string",
            "readOnly": true
          },
          "Phone": {
            "title": "Phone",
            "type": "string",
            "readOnly": true
          },
          "Fax": {
            "title": "Fax",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Customers": {
        "title": "Customers",
        "required": [
          "Id",
          "CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CompanyName": {
            "title": "CompanyName",
            "type": "string"
          },
          "ContactName": {
            "title": "ContactName",
            "type": "string"
          },
          "ContactTitle": {
            "title": "ContactTitle",
            "type": "string"
          },
          "Address": {
            "title": "Address",
            "type": "string"
          },
          "City": {
            "title": "City",
            "type": "string"
          },
          "Region": {
            "title": "Region",
            "type": "string"
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string"
          },
          "Country": {
            "title": "Country",
            "type": "string"
          },
          "Phone": {
            "title": "Phone",
            "type": "string"
          },
          "Fax": {
            "title": "Fax",
            "type": "string"
          }
        }
      },
      "EmployeeQuery": {
        "title": "EmployeeQuery",
        "required": [
          "Id",
          "LastName",
          "FirstName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "LastName": {
            "title": "LastName",
            "type": "string",
            "readOnly": true
          },
          "FirstName": {
            "title": "FirstName",
            "type": "string",
            "readOnly": true
          },
          "Title": {
            "title": "Title",
            "type": "string",
            "readOnly": true
          },
          "TitleOfCourtesy": {
            "title": "TitleOfCourtesy",
            "type": "string",
            "readOnly": true
          },
          "BirthDate": {
            "title": "BirthDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "HireDate": {
            "title": "HireDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "Address": {
            "title": "Address",
            "type": "string",
            "readOnly": true
          },
          "City": {
            "title": "City",
            "type": "string",
            "readOnly": true
          },
          "Region": {
            "title": "Region",
            "type": "string",
            "readOnly": true
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string",
            "readOnly": true
          },
          "Country": {
            "title": "Country",
            "type": "string",
            "readOnly": true
          },
          "HomePhone": {
            "title": "HomePhone",
            "type": "string",
            "readOnly": true
          },
          "Extension": {
            "title": "Extension",
            "type": "string",
            "readOnly": true
          },
          "Notes": {
            "title": "Notes",
            "type": "string",
            "readOnly": true
          },
          "ReportsTo": {
            "title": "ReportsTo",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Employee_FullName": {
            "title": "Employee_FullName",
            "type": "string",
            "readOnly": true
          },
          "DocumentScanFileId": {
            "title": "DocumentScanFileId",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileLink"
              }
            ],
            "readOnly": true
          },
          "Photo": {
            "title": "Photo",
            "type": "array",
            "items": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer"
            }
          }
        }
      },
      "Employees": {
        "title": "Employees",
        "required": [
          "Id",
          "LastName",
          "FirstName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "LastName": {
            "title": "LastName",
            "type": "string"
          },
          "FirstName": {
            "title": "FirstName",
            "type": "string"
          },
          "Title": {
            "title": "Title",
            "type": "string"
          },
          "TitleOfCourtesy": {
            "title": "TitleOfCourtesy",
            "type": "string"
          },
          "BirthDate": {
            "title": "BirthDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "HireDate": {
            "title": "HireDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Address": {
            "title": "Address",
            "type": "string"
          },
          "City": {
            "title": "City",
            "type": "string"
          },
          "Region": {
            "title": "Region",
            "type": "string"
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string"
          },
          "Country": {
            "title": "Country",
            "type": "string"
          },
          "HomePhone": {
            "title": "HomePhone",
            "type": "string"
          },
          "Extension": {
            "title": "Extension",
            "type": "string"
          },
          "Photo": {
            "title": "Photo",
            "type": "array",
            "items": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer"
            }
          },
          "Notes": {
            "title": "Notes",
            "type": "string"
          },
          "ReportsTo": {
            "title": "ReportsTo",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PhotoPath": {
            "title": "PhotoPath",
            "type": "string"
          },
          "DocumentScanFileId": {
            "title": "DocumentScanFileId",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileLink"
              }
            ]
          }
        }
      },
      "EmployeeTerritory": {
        "title": "EmployeeTerritory",
        "required": [
          "EmployeeID",
          "TerritoryID"
        ],
        "type": "object",
        "properties": {
          "EmployeeID": {
            "title": "EmployeeID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "TerritoryID": {
            "title": "TerritoryID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FileLink": {
        "title": "FileLink",
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "FileName": {
            "title": "FileName",
            "type": "string"
          },
          "Length": {
            "title": "Length",
            "maximum": 9223372036854775807,
            "minimum": 0,
            "type": "integer",
            "format": "int64"
          },
          "CreateDate": {
            "title": "CreateDate",
            "type": "string",
            "format": "date-time"
          },
          "UploadLink": {
            "title": "UploadLink",
            "type": "string"
          }
        }
      },
      "OrderDetails": {
        "title": "OrderDetails",
        "required": [
          "OrderID",
          "ProductID",
          "UnitPrice",
          "Quantity",
          "Discount"
        ],
        "type": "object",
        "properties": {
          "OrderID": {
            "title": "OrderID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "ProductID": {
            "title": "ProductID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UnitPrice": {
            "title": "UnitPrice",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number"
          },
          "Quantity": {
            "title": "Quantity",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer"
          },
          "Discount": {
            "title": "Discount",
            "type": "number",
            "format": "float"
          }
        }
      },
      "OrderProductQuery": {
        "title": "OrderProductQuery",
        "required": [
          "Id",
          "OrderID",
          "ProductID",
          "UnitPrice",
          "Quantity",
          "Discount",
          "Orders_Id",
          "Orders_CustomerID",
          "Products_Id",
          "Products_ProductName",
          "Products_Discontinued"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "OrderID": {
            "title": "OrderID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ProductID": {
            "title": "ProductID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "UnitPrice": {
            "title": "UnitPrice",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "readOnly": true
          },
          "Quantity": {
            "title": "Quantity",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "readOnly": true
          },
          "Discount": {
            "title": "Discount",
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "Orders_Id": {
            "title": "Orders_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Orders_CustomerID": {
            "title": "Orders_CustomerID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Orders_EmployeeID": {
            "title": "Orders_EmployeeID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Orders_OrderDate": {
            "title": "Orders_OrderDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "Orders_RequiredDate": {
            "title": "Orders_RequiredDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "Orders_ShippedDate": {
            "title": "Orders_ShippedDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "Orders_ShipVia": {
            "title": "Orders_ShipVia",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Orders_Freight": {
            "title": "Orders_Freight",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true,
            "readOnly": true
          },
          "Orders_ShipName": {
            "title": "Orders_ShipName",
            "type": "string",
            "readOnly": true
          },
          "Orders_ShipAddress": {
            "title": "Orders_ShipAddress",
            "type": "string",
            "readOnly": true
          },
          "Orders_ShipCity": {
            "title": "Orders_ShipCity",
            "type": "string",
            "readOnly": true
          },
          "Orders_ShipRegion": {
            "title": "Orders_ShipRegion",
            "type": "string",
            "readOnly": true
          },
          "Orders_ShipPostalCode": {
            "title": "Orders_ShipPostalCode",
            "type": "string",
            "readOnly": true
          },
          "Orders_ShipCountry": {
            "title": "Orders_ShipCountry",
            "type": "string",
            "readOnly": true
          },
          "Products_Id": {
            "title": "Products_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Products_ProductName": {
            "title": "Products_ProductName",
            "type": "string",
            "readOnly": true
          },
          "Products_SupplierID": {
            "title": "Products_SupplierID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Products_CategoryID": {
            "title": "Products_CategoryID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Products_QuantityPerUnit": {
            "title": "Products_QuantityPerUnit",
            "type": "string",
            "readOnly": true
          },
          "Products_UnitPrice": {
            "title": "Products_UnitPrice",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true,
            "readOnly": true
          },
          "Products_UnitsInStock": {
            "title": "Products_UnitsInStock",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "Products_UnitsOnOrder": {
            "title": "Products_UnitsOnOrder",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "Products_ReorderLevel": {
            "title": "Products_ReorderLevel",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "Products_Discontinued": {
            "title": "Products_Discontinued",
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "Orders": {
        "title": "Orders",
        "required": [
          "Id",
          "CustomerID"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CustomerID": {
            "title": "CustomerID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "EmployeeID": {
            "title": "EmployeeID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "OrderDate": {
            "title": "OrderDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "RequiredDate": {
            "title": "RequiredDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ShippedDate": {
            "title": "ShippedDate",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ShipVia": {
            "title": "ShipVia",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Freight": {
            "title": "Freight",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true
          },
          "ShipName": {
            "title": "ShipName",
            "type": "string"
          },
          "ShipAddress": {
            "title": "ShipAddress",
            "type": "string"
          },
          "ShipCity": {
            "title": "ShipCity",
            "type": "string"
          },
          "ShipRegion": {
            "title": "ShipRegion",
            "type": "string"
          },
          "ShipPostalCode": {
            "title": "ShipPostalCode",
            "type": "string"
          },
          "ShipCountry": {
            "title": "ShipCountry",
            "type": "string"
          }
        }
      },
      "OrdersQuery": {
        "title": "OrdersQuery",
        "required": [
          "Id",
          "CustomerID",
          "Customers_Id",
          "Customers_CompanyName",
          "Employees_Id",
          "Employees_LastName",
          "Employees_FirstName",
          "Shippers_Id",
          "Shippers_CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "CustomerID": {
            "title": "CustomerID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "EmployeeID": {
            "title": "EmployeeID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "OrderDate": {
            "title": "OrderDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "RequiredDate": {
            "title": "RequiredDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "ShippedDate": {
            "title": "ShippedDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "ShipVia": {
            "title": "ShipVia",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Freight": {
            "title": "Freight",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true,
            "readOnly": true
          },
          "ShipName": {
            "title": "ShipName",
            "type": "string",
            "readOnly": true
          },
          "ShipAddress": {
            "title": "ShipAddress",
            "type": "string",
            "readOnly": true
          },
          "ShipCity": {
            "title": "ShipCity",
            "type": "string",
            "readOnly": true
          },
          "ShipRegion": {
            "title": "ShipRegion",
            "type": "string",
            "readOnly": true
          },
          "ShipPostalCode": {
            "title": "ShipPostalCode",
            "type": "string",
            "readOnly": true
          },
          "ShipCountry": {
            "title": "ShipCountry",
            "type": "string",
            "readOnly": true
          },
          "Customers_Id": {
            "title": "Customers_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Customers_CompanyName": {
            "title": "Customers_CompanyName",
            "type": "string",
            "readOnly": true
          },
          "Customers_ContactName": {
            "title": "Customers_ContactName",
            "type": "string",
            "readOnly": true
          },
          "Customers_ContactTitle": {
            "title": "Customers_ContactTitle",
            "type": "string",
            "readOnly": true
          },
          "Customers_Address": {
            "title": "Customers_Address",
            "type": "string",
            "readOnly": true
          },
          "Customers_City": {
            "title": "Customers_City",
            "type": "string",
            "readOnly": true
          },
          "Customers_Region": {
            "title": "Customers_Region",
            "type": "string",
            "readOnly": true
          },
          "Customers_PostalCode": {
            "title": "Customers_PostalCode",
            "type": "string",
            "readOnly": true
          },
          "Customers_Country": {
            "title": "Customers_Country",
            "type": "string",
            "readOnly": true
          },
          "Customers_Phone": {
            "title": "Customers_Phone",
            "type": "string",
            "readOnly": true
          },
          "Customers_Fax": {
            "title": "Customers_Fax",
            "type": "string",
            "readOnly": true
          },
          "Employees_Id": {
            "title": "Employees_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Employees_LastName": {
            "title": "Employees_LastName",
            "type": "string",
            "readOnly": true
          },
          "Employees_FirstName": {
            "title": "Employees_FirstName",
            "type": "string",
            "readOnly": true
          },
          "Employees_Title": {
            "title": "Employees_Title",
            "type": "string",
            "readOnly": true
          },
          "Employees_TitleOfCourtesy": {
            "title": "Employees_TitleOfCourtesy",
            "type": "string",
            "readOnly": true
          },
          "Employees_BirthDate": {
            "title": "Employees_BirthDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "Employees_HireDate": {
            "title": "Employees_HireDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "Employees_Address": {
            "title": "Employees_Address",
            "type": "string",
            "readOnly": true
          },
          "Employees_City": {
            "title": "Employees_City",
            "type": "string",
            "readOnly": true
          },
          "Employees_Region": {
            "title": "Employees_Region",
            "type": "string",
            "readOnly": true
          },
          "Employees_PostalCode": {
            "title": "Employees_PostalCode",
            "type": "string",
            "readOnly": true
          },
          "Employees_Country": {
            "title": "Employees_Country",
            "type": "string",
            "readOnly": true
          },
          "Employees_HomePhone": {
            "title": "Employees_HomePhone",
            "type": "string",
            "readOnly": true
          },
          "Employees_Extension": {
            "title": "Employees_Extension",
            "type": "string",
            "readOnly": true
          },
          "Employees_Notes": {
            "title": "Employees_Notes",
            "type": "string",
            "readOnly": true
          },
          "Employees_ReportsTo": {
            "title": "Employees_ReportsTo",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Employees_PhotoPath": {
            "title": "Employees_PhotoPath",
            "type": "string",
            "readOnly": true
          },
          "Shippers_Id": {
            "title": "Shippers_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Shippers_CompanyName": {
            "title": "Shippers_CompanyName",
            "type": "string",
            "readOnly": true
          },
          "Shippers_Phone": {
            "title": "Shippers_Phone",
            "type": "string",
            "readOnly": true
          },
          "EmployeeFullName": {
            "title": "EmployeeFullName",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ProductQuery": {
        "title": "ProductQuery",
        "required": [
          "Id",
          "ProductName",
          "Discontinued",
          "Categories_Id",
          "Categories_CategoryName",
          "Suppliers_Id",
          "Suppliers_CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ProductName": {
            "title": "ProductName",
            "type": "string",
            "readOnly": true
          },
          "SupplierID": {
            "title": "SupplierID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "CategoryID": {
            "title": "CategoryID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "QuantityPerUnit": {
            "title": "QuantityPerUnit",
            "type": "string",
            "readOnly": true
          },
          "UnitPrice": {
            "title": "UnitPrice",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true,
            "readOnly": true
          },
          "UnitsInStock": {
            "title": "UnitsInStock",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "UnitsOnOrder": {
            "title": "UnitsOnOrder",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "ReorderLevel": {
            "title": "ReorderLevel",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "Discontinued": {
            "title": "Discontinued",
            "type": "boolean",
            "readOnly": true
          },
          "Categories_Id": {
            "title": "Categories_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Categories_CategoryName": {
            "title": "Categories_CategoryName",
            "type": "string",
            "readOnly": true
          },
          "Categories_Description": {
            "title": "Categories_Description",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_Id": {
            "title": "Suppliers_Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "Suppliers_CompanyName": {
            "title": "Suppliers_CompanyName",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_ContactName": {
            "title": "Suppliers_ContactName",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_ContactTitle": {
            "title": "Suppliers_ContactTitle",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_Address": {
            "title": "Suppliers_Address",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_City": {
            "title": "Suppliers_City",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_Region": {
            "title": "Suppliers_Region",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_PostalCode": {
            "title": "Suppliers_PostalCode",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_Country": {
            "title": "Suppliers_Country",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_Phone": {
            "title": "Suppliers_Phone",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_Fax": {
            "title": "Suppliers_Fax",
            "type": "string",
            "readOnly": true
          },
          "Suppliers_HomePage": {
            "title": "Suppliers_HomePage",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Products": {
        "title": "Products",
        "required": [
          "Id",
          "ProductName",
          "Discontinued"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "ProductName": {
            "title": "ProductName",
            "type": "string"
          },
          "SupplierID": {
            "title": "SupplierID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CategoryID": {
            "title": "CategoryID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "QuantityPerUnit": {
            "title": "QuantityPerUnit",
            "type": "string"
          },
          "UnitPrice": {
            "title": "UnitPrice",
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "nullable": true
          },
          "UnitsInStock": {
            "title": "UnitsInStock",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "UnitsOnOrder": {
            "title": "UnitsOnOrder",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "ReorderLevel": {
            "title": "ReorderLevel",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "nullable": true
          },
          "Discontinued": {
            "title": "Discontinued",
            "type": "boolean"
          }
        }
      },
      "Region": {
        "title": "Region",
        "required": [
          "Id",
          "RegionDescription"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "RegionDescription": {
            "title": "RegionDescription",
            "type": "string"
          }
        }
      },
      "RegionQuery": {
        "title": "RegionQuery",
        "required": [
          "Id",
          "RegionDescription"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "RegionDescription": {
            "title": "RegionDescription",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Report": {
        "title": "Report",
        "type": "object"
      },
      "ReportFormQuery": {
        "title": "ReportFormQuery",
        "required": [
          "Id"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "From": {
            "title": "From",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "To": {
            "title": "To",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EmployeeId": {
            "title": "EmployeeId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CustomerId": {
            "title": "CustomerId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "useExcel": {
            "title": "useExcel",
            "type": "boolean"
          }
        }
      },
      "ShipperQuery": {
        "title": "ShipperQuery",
        "required": [
          "Id",
          "CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "CompanyName": {
            "title": "CompanyName",
            "type": "string",
            "readOnly": true
          },
          "Phone": {
            "title": "Phone",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Shippers": {
        "title": "Shippers",
        "required": [
          "Id",
          "CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CompanyName": {
            "title": "CompanyName",
            "type": "string"
          },
          "Phone": {
            "title": "Phone",
            "type": "string"
          }
        }
      },
      "SupplierQuery": {
        "title": "SupplierQuery",
        "required": [
          "CompanyName",
          "Id"
        ],
        "type": "object",
        "properties": {
          "CompanyName": {
            "title": "CompanyName",
            "type": "string",
            "readOnly": true
          },
          "ContactName": {
            "title": "ContactName",
            "type": "string",
            "readOnly": true
          },
          "ContactTitle": {
            "title": "ContactTitle",
            "type": "string",
            "readOnly": true
          },
          "Address": {
            "title": "Address",
            "type": "string",
            "readOnly": true
          },
          "City": {
            "title": "City",
            "type": "string",
            "readOnly": true
          },
          "Region": {
            "title": "Region",
            "type": "string",
            "readOnly": true
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string",
            "readOnly": true
          },
          "Country": {
            "title": "Country",
            "type": "string",
            "readOnly": true
          },
          "Phone": {
            "title": "Phone",
            "type": "string",
            "readOnly": true
          },
          "Fax": {
            "title": "Fax",
            "type": "string",
            "readOnly": true
          },
          "HomePage": {
            "title": "HomePage",
            "type": "string",
            "readOnly": true
          },
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "Suppliers": {
        "title": "Suppliers",
        "required": [
          "Id",
          "CompanyName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "CompanyName": {
            "title": "CompanyName",
            "type": "string"
          },
          "ContactName": {
            "title": "ContactName",
            "type": "string"
          },
          "ContactTitle": {
            "title": "ContactTitle",
            "type": "string"
          },
          "Address": {
            "title": "Address",
            "type": "string"
          },
          "City": {
            "title": "City",
            "type": "string"
          },
          "Region": {
            "title": "Region",
            "type": "string"
          },
          "PostalCode": {
            "title": "PostalCode",
            "type": "string"
          },
          "Country": {
            "title": "Country",
            "type": "string"
          },
          "Phone": {
            "title": "Phone",
            "type": "string"
          },
          "Fax": {
            "title": "Fax",
            "type": "string"
          },
          "HomePage": {
            "title": "HomePage",
            "type": "string"
          }
        }
      },
      "SysOperationLock": {
        "title": "SysOperationLock",
        "required": [
          "OperationName",
          "OperationContext",
          "AquiredTime",
          "ExpirationTime"
        ],
        "type": "object",
        "properties": {
          "OperationName": {
            "title": "OperationName",
            "type": "string"
          },
          "OperationContext": {
            "title": "OperationContext",
            "type": "string"
          },
          "MachineName": {
            "title": "MachineName",
            "type": "string"
          },
          "ProcessId": {
            "title": "ProcessId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AquiredTime": {
            "title": "AquiredTime",
            "type": "string",
            "format": "date-time"
          },
          "ExpirationTime": {
            "title": "ExpirationTime",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SysPermission": {
        "title": "SysPermission",
        "required": [
          "Id",
          "Type",
          "CodeName",
          "ObjectId",
          "Guid"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Type": {
            "title": "Type",
            "maximum": 255,
            "minimum": 0,
            "type": "integer"
          },
          "CodeName": {
            "title": "CodeName",
            "type": "string"
          },
          "DisplayName": {
            "title": "DisplayName",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "ObjectId": {
            "title": "ObjectId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Guid": {
            "title": "Guid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "SysPermissionType": {
        "title": "SysPermissionType",
        "required": [
          "Id",
          "CodeName",
          "DisplayName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 255,
            "minimum": 0,
            "type": "integer"
          },
          "CodeName": {
            "title": "CodeName",
            "type": "string"
          },
          "DisplayName": {
            "title": "DisplayName",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          }
        }
      },
      "SysResetPasswordToken": {
        "title": "SysResetPasswordToken",
        "required": [
          "Id",
          "UserId",
          "Token",
          "ValidFrom",
          "IsExecuted"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "title": "UserId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Token": {
            "title": "Token",
            "type": "string"
          },
          "ValidFrom": {
            "title": "ValidFrom",
            "type": "string",
            "format": "date-time"
          },
          "IsExecuted": {
            "title": "IsExecuted",
            "type": "boolean"
          }
        }
      },
      "SysRole": {
        "title": "SysRole",
        "required": [
          "Id",
          "Name",
          "IsOwnByUser",
          "IsSystem"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "title": "Name",
            "type": "string"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "OwnerUserID": {
            "title": "OwnerUserID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IsOwnByUser": {
            "title": "IsOwnByUser",
            "type": "boolean"
          },
          "IsSystem": {
            "title": "IsSystem",
            "type": "boolean"
          }
        }
      },
      "SysRolePermission": {
        "title": "SysRolePermission",
        "required": [
          "Id",
          "RoleId",
          "PermissionId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "RoleId": {
            "title": "RoleId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "PermissionId": {
            "title": "PermissionId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SysSetting": {
        "title": "SysSetting",
        "required": [
          "Id",
          "SettingPropertyId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "SettingPropertyId": {
            "title": "SettingPropertyId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "title": "UserId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StringValue": {
            "title": "StringValue",
            "type": "string"
          }
        }
      },
      "SysSettingProperty": {
        "title": "SysSettingProperty",
        "required": [
          "Id",
          "Name",
          "IsManaged",
          "IsOverridable"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "title": "Name",
            "type": "string"
          },
          "IsManaged": {
            "title": "IsManaged",
            "type": "boolean"
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "UIEditorType": {
            "title": "UIEditorType",
            "type": "string"
          },
          "GroupName": {
            "title": "GroupName",
            "type": "string"
          },
          "IsOverridable": {
            "title": "IsOverridable",
            "type": "boolean"
          },
          "DefaultType": {
            "title": "DefaultType",
            "type": "string"
          }
        }
      },
      "SysUser": {
        "title": "SysUser",
        "required": [
          "Id",
          "AccountName",
          "DisplayName",
          "IsDeactivated",
          "IsSystemUser",
          "FullAccess",
          "IsEmailConfirmed",
          "IsAnonymous",
          "CreateDate"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "AccountName": {
            "title": "AccountName",
            "type": "string"
          },
          "DisplayName": {
            "title": "DisplayName",
            "type": "string"
          },
          "IsDeactivated": {
            "title": "IsDeactivated",
            "type": "boolean",
            "writeOnly": true
          },
          "IsSystemUser": {
            "title": "IsSystemUser",
            "type": "boolean",
            "writeOnly": true
          },
          "EMail": {
            "title": "EMail",
            "type": "string"
          },
          "FullAccess": {
            "title": "FullAccess",
            "type": "boolean",
            "writeOnly": true
          },
          "DeactivationDate": {
            "title": "DeactivationDate",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "writeOnly": true
          },
          "Description": {
            "title": "Description",
            "type": "string"
          },
          "IsEmailConfirmed": {
            "title": "IsEmailConfirmed",
            "type": "boolean",
            "writeOnly": true
          },
          "IsAnonymous": {
            "title": "IsAnonymous",
            "type": "boolean",
            "writeOnly": true
          },
          "CreateDate": {
            "title": "CreateDate",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SysUserPermissionsDisplayView": {
        "title": "SysUserPermissionsDisplayView",
        "required": [
          "UserId",
          "PermissionId"
        ],
        "type": "object",
        "properties": {
          "UserId": {
            "title": "UserId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "PermissionId": {
            "title": "PermissionId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "PermissionName": {
            "title": "PermissionName",
            "type": "string"
          },
          "Roles": {
            "title": "Roles",
            "type": "string"
          }
        }
      },
      "SysUserRole": {
        "title": "SysUserRole",
        "required": [
          "Id",
          "UserId",
          "RoleId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "title": "UserId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "RoleId": {
            "title": "RoleId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SysUsersDisplayView": {
        "title": "SysUsersDisplayView",
        "required": [
          "Id"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "UserRoleId": {
            "title": "UserRoleId",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Territory": {
        "title": "Territory",
        "required": [
          "Id",
          "TerritoryDescription",
          "RegionID"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "title": "Id",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "TerritoryDescription": {
            "title": "TerritoryDescription",
            "type": "string"
          },
          "RegionID": {
            "title": "RegionID",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OData.Error.NotFound": {
        "title": "OData.Error.Main",
        "allOf": [
          {
            "$ref": "#/components/schemas/OData.Error.Main"
          }
        ],
        "description": "Not found"
      },
      "OData.Error.Default": {
        "title": "OData.Error.Default",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "title": "OData.Error.Main",
            "allOf": [
              {
                "$ref": "#/components/schemas/OData.Error.Main"
              }
            ],
            "description": "Error"
          }
        },
        "description": "Error"
      },
      "OData.Error.Main": {
        "title": "OData.Error.Main",
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          },
          "message": {
            "title": "message",
            "type": "string"
          },
          "target": {
            "title": "target",
            "type": "string"
          },
          "details": {
            "title": "details",
            "type": "array",
            "items": {
              "title": "OData.Error.Detail",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OData.Error.Detail"
                }
              ],
              "description": "Error detail"
            }
          },
          "innererror": {
            "title": "innererror",
            "type": "object",
            "description": "The structure of this object is service-specific"
          }
        },
        "description": "Error"
      },
      "OData.Error.Detail": {
        "title": "OData.Error.Detail",
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          },
          "message": {
            "title": "message",
            "type": "string"
          },
          "target": {
            "title": "target",
            "type": "string"
          }
        },
        "description": "Error detail"
      },
      "Framework.Action.Result": {
        "title": "Action result type",
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "The following types of result of the action are possible: 0 - None, 1 - Success, 2 - Fail, 3 - Canceled",
        "format": "int32"
      },
      "Framework.Error.NotFound": {
        "title": "Framework.Error.NotFound",
        "type": "object",
        "properties": {
          "Message": {
            "title": "Message",
            "type": "string"
          },
          "MessageDetail": {
            "title": "MessageDetail",
            "type": "string"
          }
        },
        "description": "Not found"
      },
      "Framework.Error.InternalServerError": {
        "title": "Framework.Error.InternalServerError",
        "type": "object",
        "properties": {
          "Message": {
            "title": "Message",
            "type": "string"
          },
          "ExceptionMessage": {
            "title": "ExceptionMessage",
            "type": "string"
          },
          "ExceptionType": {
            "title": "ExceptionType",
            "type": "string"
          },
          "StackTrace": {
            "title": "StackTrace",
            "type": "string"
          }
        },
        "description": "Not found"
      }
    },
    "responses": {
      "OData.Error.NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "title": "OData.Error.NotFound",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OData.Error.NotFound"
                }
              ]
            }
          }
        }
      },
      "OData.Error.Default": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "title": "OData.Error.Default",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OData.Error.Default"
                }
              ]
            }
          }
        }
      },
      "Framework.Error.NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "title": "Framework.Error.NotFound",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework.Error.NotFound"
                }
              ]
            }
          }
        }
      },
      "Framework.Error.InternalServerError": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "title": "Framework.Error.InternalServerError",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Framework.Error.InternalServerError"
                }
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "OData.count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "schema": {
          "type": "boolean"
        }
      },
      "OData.expand": {
        "name": "$expand",
        "in": "query",
        "description": "Expand related entities",
        "schema": {
          "enum": [
            "*"
          ],
          "type": "boolean",
          "default": "*"
        }
      },
      "OData.filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "schema": {
          "type": "string"
        }
      },
      "OData.search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "schema": {
          "type": "string"
        }
      },
      "OData.skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "schema": {
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer",
          "format": "int32"
        }
      },
      "OData.top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "schema": {
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "securitySchemes": {
      "default": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "http://localhost:9351/token",
            "scopes": { }
          }
        }
      }
    }
  }
}